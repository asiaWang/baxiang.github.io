<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>克鲁斯卡尔的博客</title>
    <link>http://novoland.github.io</link>
    <atom:link href="http://novoland.github.io/rss.xml" rel="self" type="application/rss+xml" />
    <description>一个程序员</description>
    <language>zh-CN</language>
    <pubDate>Thu, 11 Sep 2014 10:02:13 +0800</pubDate>
    <lastBuildDate>Thu, 11 Sep 2014 10:02:13 +0800</lastBuildDate>

    
    <item>
      <title>ThreadLocal 分析</title>
      <link>http://novoland.github.io/%E5%B9%B6%E5%8F%91/2014/09/11/ThreadLocal%20%E5%88%86%E6%9E%90.html</link>
      <pubDate>11 Sep 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E5%B9%B6%E5%8F%91/2014/09/11/ThreadLocal 分析</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;从功能上来说，它类似一个全局的Map，key是线程。不同线程get时拿到的都是专属于自己的那个对象，互相隔离，完全不存在并发问题。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;典型的使用方式&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #75715e; margin-top: 0px;&quot;&gt;// 摘自 j.u.c.ThreadLocalRandom&lt;/span&gt;
&lt;span style=&quot;color: #F92672;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;static&lt;/span&gt; final ThreadLocal&amp;lt;ThreadLocalRandom&amp;gt; localRandom =  &lt;span style=&quot;color: #75715e;&quot;&gt;// ThreadLocal对象都是static的，全局共享&lt;/span&gt;
    &lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; ThreadLocal&amp;lt;ThreadLocalRandom&amp;gt;() {      &lt;span style=&quot;color: #75715e;&quot;&gt;// 初始值&lt;/span&gt;
        &lt;span style=&quot;color: #F92672;&quot;&gt;protected&lt;/span&gt; ThreadLocalRandom &lt;span style=&quot;color: #a6e22e;&quot;&gt;initialValue&lt;/span&gt;() {
            &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; ThreadLocalRandom();
        }
};

localRandom.&lt;span style=&quot;color: #F92672;&quot;&gt;get&lt;/span&gt;();      &lt;span style=&quot;color: #75715e;&quot;&gt;// 拿当前线程对应的对象&lt;/span&gt;
localRandom.put(...);   &lt;span style=&quot;color: #75715e;&quot;&gt;// put&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;典型使用场景&lt;/h2&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;用空间换并发度；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;在线程范围内传参，如 hibernate 的 session；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;实现&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一个非常自然想法是用一个线程安全的 &lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;Map&amp;lt;Thread,Object&amp;gt;&lt;/code&gt; 实现：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;class ThreadLocal { 
  &lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;private&lt;/span&gt; Map values = Collections.synchronizedMap(&lt;span style=&quot;color: #F92672;&quot;&gt;new&lt;/span&gt; HashMap());

  &lt;span style=&quot;color: #F92672;&quot;&gt;public&lt;/span&gt; Object &lt;span style=&quot;color: #a6e22e;&quot;&gt;get&lt;/span&gt;() {
    Thread curThread = Thread.currentThread();
    Object o = values.&lt;span style=&quot;color: #F92672;&quot;&gt;get&lt;/span&gt;(curThread);
    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; (o == &lt;span style=&quot;color: #F92672;&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !values.containsKey(curThread)) {
      o = initialValue();
      values.put(curThread, o);
    }
    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; o;
  }

  &lt;span style=&quot;color: #F92672;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;set&lt;/span&gt;(Object newValue) {
    values.put(Thread.currentThread(), newValue);
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;但这是非常naive的：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;ThreadLocal&lt;/code&gt;本意是避免并发，用一个全局Map显然违背了这一初衷；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;用&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;Thread&lt;/code&gt;当key，除非手动调用&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;remove&lt;/code&gt;，否则即使线程退出了 1)该&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;Thread&lt;/code&gt;对象无法回收； 2)该线程在所有&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;ThreadLocal&lt;/code&gt;中对应的value也无法回收。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;JDK 的实现刚好是反过来的：&lt;br style=&quot;margin-top: 0px;&quot;/&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1404916039768.png&quot; name=&quot;7adc9cbf-24e8-4274-887c-45862c1925c5&quot; src=&quot;/assets/img/3603e633a6095f8aaf63273ed133a2e8.png&quot; style=&quot;border: 0; max-width: 100%; border-radius: 8px;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;每个Thread对象内都存在一个&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;ThreadLocal.ThreadLocalMap&lt;/code&gt;对象，保存着该线程所有用到的&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;ThreadLocal&lt;/code&gt;及其value。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;ThreadLocalMap&lt;/code&gt;是定义在&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;ThreadLocal&lt;/code&gt;类内部的私有类，它是采用“开放定址法”解决冲突的hashmap。key是&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;ThreadLocal&lt;/code&gt;对象。当调用某个&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;ThreadLocal&lt;/code&gt;对象的&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;get&lt;/code&gt;或&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;put&lt;/code&gt;方法时，首先会从当前线程中取出ThreadLocalMap，然后查找对应的value：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;public&lt;/span&gt; T &lt;span style=&quot;color: #a6e22e;&quot;&gt;get&lt;/span&gt;() {
    Thread t = Thread.currentThread();
    ThreadLocalMap map = getMap(t);     &lt;span style=&quot;color: #75715e;&quot;&gt;//拿到当前线程的ThreadLocalMap&lt;/span&gt;
    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; (map != &lt;span style=&quot;color: #F92672;&quot;&gt;null&lt;/span&gt;) {
        ThreadLocalMap.Entry e = map.getEntry(&lt;span style=&quot;color: #F92672;&quot;&gt;this&lt;/span&gt;);    &lt;span style=&quot;color: #75715e;&quot;&gt;// 以该ThreadLocal对象为key取value&lt;/span&gt;
        &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; (e != &lt;span style=&quot;color: #F92672;&quot;&gt;null&lt;/span&gt;)
            &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; (T)e.&lt;span style=&quot;color: #F92672;&quot;&gt;value&lt;/span&gt;;
    }
    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; setInitialValue();
}
ThreadLocalMap getMap(Thread t) {
    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; t.threadLocals;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;现在来看看它的哈希策略。所有&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;ThreadLocal&lt;/code&gt;对象共享一个&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;AtomicInteger&lt;/code&gt;对象&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;nextHashCode&lt;/code&gt;用于计算hashcode，一个新对象产生时它的hashcode就确定了，算法是从0开始，以&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;HASH_INCREMENT = 0x61c88647&lt;/code&gt;为间隔递增，这是&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;ThreadLocal&lt;/code&gt;唯一需要同步的地方。根据hashcode定位桶的算法是将其与数组长度-1进行与操作：&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;key.threadLocalHashCode &amp;amp; (table.length - 1)&lt;/code&gt;。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;0x61c88647&lt;/code&gt;这个魔数是怎么确定的呢？&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;ThreadLocalMap&lt;/code&gt;的初始长度为16，每次扩容都增长为原来的2倍，即它的长度始终是2的n次方，上述算法中使用&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;0x61c88647&lt;/code&gt;可以让hash的结果在2的n次方内尽可能均匀分布，减少冲突的概率。具体原因我也不知道，不过这是一个好的参考。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;内存管理&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;ThreadLocalMap.Entry&lt;/code&gt;继承自&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;WeakReference&lt;/code&gt;，是 key（ThreadLocal 对象） 和 value 的容器：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;static&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #f8f8f2;&quot;&gt;Entry&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;extends&lt;/span&gt; &lt;span style=&quot;color: #f8f8f2;&quot;&gt;WeakReference&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #a6e22e; font-style: italic;&quot;&gt;ThreadLocal&lt;/span&gt;&amp;gt; &lt;/span&gt;{
    &lt;span style=&quot;color: #75715e;&quot;&gt;/** The value associated with this ThreadLocal. */&lt;/span&gt;
    Object value;

    Entry(ThreadLocal k, Object v) {
        super(k);
        value = v;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一旦某个&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;ThreadLocal&lt;/code&gt;对象没有强引用了，它在所有线程内部的&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;ThreadLocalMap&lt;/code&gt;中的key都将被GC掉（此时value还未回收），在map后续的&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;get/set&lt;/code&gt;中会探测到key被回收的entry，将其 value 设置为 null 以帮助GC，因此 value 在 key 被 GC 后可能还会存活一段时间，但最终也会被回收。这个过程和&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;java.util.WeakHashMap&lt;/code&gt;的实现几乎是一样的。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;因此&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;ThreadLocal&lt;/code&gt;本身是没有内存泄露问题的，通常由它引发的内存泄露问题都是线程只 put 而忘了 remove 导致的，从上面分析可知，即使线程退出了，只要 &lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px;&quot;&gt;ThreadLocal&lt;/code&gt; 还有强引用，该线程曾经 put 过的东西是不会被回收掉的（如果是 naive 的那种实现方式倒可以实现）。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>MapReduce Algorithms</title>
      <link>http://novoland.github.io/%E5%B7%A5%E4%BD%9C/2014/09/04/MapReduce%20Algorithms.html</link>
      <pubDate>04 Sep 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E5%B7%A5%E4%BD%9C/2014/09/04/MapReduce Algorithms</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;h1 style=&quot;font-size: 36px; margin: 0.67em 0; font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px;&quot;&gt;1. MapReduce 工作原理&lt;/h1&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一图胜千言：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1409802041299.png&quot; name=&quot;1a6b1e79-166a-4285-84f2-0128d87d409f&quot; src=&quot;/assets/img/3b6dc283d85bb557aa3ad7b9974069fd.png&quot; style=&quot;border: 0; margin-top: 0px; max-width: 100%;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;Mapper&lt;/strong&gt;:&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;Mapper 主要做些信息抽取、过滤等工作&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Mapper 数量由输入的 split 数决定，hadoop 会尽量选择靠近数据的节点运行 mapper 任务，因此可以认为 mapper 是 data-local 的&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;生成的 &amp;lt;k,v&amp;gt; 键值对首先进入内存缓冲区，当达到一定饱和度时开始写出到磁盘，这个过程被称为 spill&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;spill 到磁盘前先进行以下处理：&lt;ul style=&quot;margin-top: 0px; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;partition，根据数据最终被传送到的 reducer 分区&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;sort，保证每个 partition 内有序&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;combine，在每个 partition 上调用配置的 combiner，合并数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;将所有 spill files 多路归并成一个文件&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Mapper 默认输出到本地文件，而非 hdfs &lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;Partitioner&lt;/strong&gt;：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;决定将 kv 键值对分配到哪个 reducer 上处理。默认算法是 hash，用 key 的 hashcode % reducer 个数&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;有时 mapper 的工作不重要，重要的是 partition 阶段提供的 group by 功能，及 partition 内部有序的特性&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;Combiner&lt;/strong&gt;：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;Combiner 是工作在 mapper 端的 reducer，目的是合并 mapper 输出，减少 mapper 到 reducer 间的数据传输&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Combiner 是一种优化手段，要求无论是否调用 combiner，调用几次，都不影响任务结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;Reducer&lt;/strong&gt;：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;Reducer 先从所有 Mapper 那儿获取自己负责处理的 partition，并多路归并成一个大文件；这个过程中，所有 key 相同的 value 被合并成一个 list&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Mapper 和 Reducer 之间存在大量数据交换，很可能成为性能瓶颈，应尽量利用压缩或 Combiner 减少在网络上传输的数据量&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Reducer 默认输出到 HDFS&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 style=&quot;font-size: 36px; margin: 0.67em 0; font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px;&quot;&gt;2. 常见算法的 MapReduce 实现&lt;/h1&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2.1 count / distinct&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;问题描述&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;其实就是 Hadoop wordcount 的例子：一堆文档，每个文档内一堆单词，统计每个单词出现次数。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;解决&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Mapper：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;raw data    --&amp;gt;    对每个碰到的单词，输出 &amp;lt;word,&lt;span style=&quot;color: #ae81ff; margin-top: 0px;&quot;&gt;1&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Shuffle 后可以保证同一个单词的所有键值对被一个 Reducer 处理&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Reducer：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&amp;lt;word,[&lt;span style=&quot;color: #ae81ff; margin-top: 0px;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;color: #ae81ff;&quot;&gt;1.&lt;/span&gt;..]&amp;gt;   --(sum)--&amp;gt;    &amp;lt;word,&lt;span style=&quot;color: #ae81ff;&quot;&gt;5&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;优化&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;用 combiner 合并 mapper 的输出，减少传输数据量：&lt;br style=&quot;margin-top: 0px;&quot;/&gt;Mapper：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;raw data 
&lt;span style=&quot;color: #ae81ff; margin-top: 0px;&quot;&gt;1.&lt;/span&gt; --(mapper)--&amp;gt;    &amp;lt;word1,&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;&amp;gt; &amp;lt;word1,&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;&amp;gt; &amp;lt;word2,&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;&amp;gt; 
&lt;span style=&quot;color: #ae81ff;&quot;&gt;2.&lt;/span&gt; --(combine)--&amp;gt;   &amp;lt;word1,&lt;span style=&quot;color: #ae81ff;&quot;&gt;2&lt;/span&gt;&amp;gt; &amp;lt;word2,&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;distinct&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;distinct 就是集合去重，解决思路和 count 问题一样，不过不需要记录单词出现次数，键值对的 value 用 null 就可以了：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;Mapper:
raw data    --&amp;gt;    &amp;lt;word,&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;null&lt;/span&gt;&amp;gt;

Reducer:
&amp;lt;word,[&lt;span style=&quot;color: #F92672;&quot;&gt;null&lt;/span&gt;,&lt;span style=&quot;color: #F92672;&quot;&gt;null&lt;/span&gt;...]&amp;gt;   --&amp;gt;    &amp;lt;word,&lt;span style=&quot;color: #F92672;&quot;&gt;null&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2.2 group by / aggregation&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;问题&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;实现类似数据库的 group by 及聚合函数的功能&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;实现&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Mapreduce 的 shuffle 过程其实已经帮我们做了 group by 的工作，Reducer 拿到的输入就是 group by 后的结果，对其 value 应用聚合函数即可。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2.3 inverted index&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;问题&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一堆文档，构造对应的倒排索引。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;解决&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;思路和 wordcount 是一样的。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Mapper：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;对一个文档中的每个单词，输出 &amp;lt;word,fileName&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;优化：可以用 Combiner 合并 Mapper 的输出。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Reducer:&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;Rducuer 的输入是 &amp;lt;word,[file1,file2...]&amp;gt;，直接输出就好了
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2.4 sort&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;问题&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一堆文件，每个文件都有若干行，一行是一个数字，数字的范围是确定的，要求对其排序。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;解决&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;利用 Reducer 拿到的输入是有序的这一特性，Mapper 和 Recuder 如果都用 identity function，那么每个 Reducer 的输出都是有序的，但 Reducer 之间无法保证有序。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;如果用归并排序的思路， 那么最后还需要一个只有一个 Reducer 的 Mapreduce 任务对所有数据做一次 merge，这显然是无法接受的。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;真正可行的算法是 &lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;桶排序&lt;/strong&gt;。回顾桶排序的过程，它首先将数据分布范围划分为若干个桶，接着遍历一遍元素并分配到对应的桶中，然后对每个桶做一次排序，因为桶之间是有序的，所以不需要 merge。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;在 Mapreduce 中，Partitioner 负责划分桶。举个例子，假设数据分布在 1 到 1w 之间，我们可以将其划分为 10 个桶，同时用 10 个 Reducer 处理每个桶内的数据，这样 Reducer 间就是有序的。为了实现这个效果，可以用一个自定义的Partitioner，将 Mapper 输出划分到上述 10 个桶内即可。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2.5 median / 第 k 大数&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;问题&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一堆数字，找中位数或第 k 大数。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;工作中遇见过一个类似的问题，场景是：&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;有一堆 Nginx 登陆日志，每条 log 都有一个时间点，要求找到一个时间点，使得该时间点之前的日志数占总日志数的 30%。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;解决&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;在小数据量场景下，反复利用快速排序的分割可以在 O(n) 范围内找到第 K 大数。我们可以将这个思路扩展到分布式环境下：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;用一个 MapReduce 任务统计所有日志的时间范围和日志总数；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;随机选一个时间点，用一个新的任务统计该时间点之前和之后的日志数；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;如果该时间点不满足要求，则根据 2 的结果找一个新的时间点，重复步骤2。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;通常这类统计需求不要求非常精确，得到一个差不多的值就可以了。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2.6 top k&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;问题&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;求一堆数前 k 大的数。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;解决&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;其实这个问题和上面的第 k 大数是一样的，可以用上面的思路解决，这里介绍一种 k 比较小时效率更高的算法。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;如果数据量很小，求 top k 可以用一个小根堆维护 top k，堆顶为这最大的 k 个数中的最小元素，把所有数据过一遍，最后堆内就是所求值了。这个算法可以很容易地扩展到分布式的环境中：先求出每个 split 的 top k，合并这些元素再求一次 top k 即得结果。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Mapper：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;维护一个小根堆，任务结束后对堆内每个元素输出一个键值对 &amp;lt;&lt;span style=&quot;color: #e6db74; margin-top: 0px;&quot;&gt;&quot;&quot;&lt;/span&gt;,num1&amp;gt;, &amp;lt;&lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&lt;/span&gt;,num2&amp;gt; ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Reducer（数量为 1）：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;得到的输入为 &amp;lt;&lt;span style=&quot;color: #e6db74; margin-top: 0px;&quot;&gt;&quot;&quot;&lt;/span&gt;,[每个 split 的 top k]&amp;gt;，对 value 求一次 top k 就可以了。
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该算法的优势在于只要一次 Mapreduce 任务即可，但缺点是只适用于 k 比较小的情况，如果 k 很大：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;如果 k 大于每个 split 内包含的记录数，算法失效；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Reducer 可能没有足够的内存容纳输入&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2.6.1 出现次数 top k 的元素&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;比上面的 top k 问题多了一个步骤，&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;要求出每个元素的出现次数&lt;/strong&gt;。如果数据量比较小，可以用下面方法：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;bitmap（如果不是数字的话则用 hashmap）+ 堆 / 快排的分割&lt;/strong&gt;&lt;br/&gt;bitmap / hashmap 用来统计元素的出现次数，堆用来保存当前 top k，只需一次遍历即可。    用快排的分割的话，要先统计出次数再分割，不只一次遍历。&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;不要求精确的话，可以用 &lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;计数版本的 BloomFilter + 堆&lt;/strong&gt;&lt;br/&gt;BloomFilter 只保存了元素的次数，没有保存元素，因此只能边统计边记录 top k，一次遍历。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;如果是大数据量就需要&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;先用一个 hadoop 任务来分割&lt;/strong&gt;，保证同一个元素的记录被分配到同一个 reducer，这样可以求出每个元素的出现次数；以这个任务的输出为输入，用上面提到的 top k 算法求出每个 split 的 top k；最后用一个 reducer 进行 merge，求出 top k 的 top k。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2.7 join&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;问题&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;join！&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;解决&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;通常有以下两种算法：&lt;/p&gt;
&lt;h4 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 25px; margin-bottom: 15px; font-size: 18px;&quot;&gt;Replicated Join (Map Join, Hash Join)&lt;/h4&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;如果 join 的一方数据量较小，可以载入内存，则可以用 Hadoop 的 Distributed Cache 将其分发到每个 Mapper 节点，在 Mapper 端进行 join。较小数据集在 Mapper 端通常被构造成一个 HashMap 以加速查找，因此 Mapper Join 实质上是一种 Hash join。&lt;/p&gt;
&lt;h4 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 25px; margin-bottom: 15px; font-size: 18px;&quot;&gt;Repartition Join (Reduce Join, Sort-Merge Join)&lt;/h4&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;如果两个数据集都很大，可在 Reducer 侧做 join：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Mapper 同时处理两个集合的数据，为遇到的每个记录生成一个键值对，key 是 join 的列值，value 除了该记录还需要一个 tag 表明它来自哪个集合:&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;raw data    --&amp;gt;    &amp;lt;key,(record,fromA)&amp;gt;, &amp;lt;key,(record,fromB)&amp;gt; ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Shuffle 后 Reducer 得到一个 key 对应的所有记录，无论是来自集合 A 还是 B。接下来 Reducer 用循环，根据 join 的类型对这些记录做连接即可。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该算法的关键在于 shuffle 阶段的排序，因此本质上是一种 Sort-Merge join。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Reducer 侧 join 是一种通用的 join 算法，但它有以下缺点：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;Mapper 侧根本不过滤数据，所有数据，即使是那些无法 join 的记录，都会被传输到 Reducer 侧，再由 Reducer 过滤，这样性能很差；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Reducer 侧可能没有足够的内存装下一个 key 对应的所有记录。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;join 优化&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;考虑这样一个场景：有两个数据集，Customer 和 Order，要求对他们进行 join，但仅限于地区在上海的顾客。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;有几种可能的优化方式：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;预先过滤一个集合，使用 Replicated Join&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;利用“地区为上海”这个约束过滤 Customer，如果过滤后的数据集足够小，则可以采用 Replicated Join；&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;用半连接(semi join)优化 Reduce Join：先过滤集合 A ，再用得到的结果在 Mapper 处过滤集合 B，最后在 Reducer 处 Join&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;如果过滤后的数据集依然很大，那么只能采用低效率的 Reduce join。优化 Reduce join 的主要策略是 &lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;尽量将数据过滤动作放在 Mapper 进行&lt;/strong&gt;（这也是一个通用准则），在上述例子中， Mapper 在处理某个 Order 时，如果知道其对应的 Customer 不在 Customer 集合中，或者不在上海地区，那么就可以跳过它而不用传输到 Reducer 侧。为了达到这一点，我们可以先对 Customer 过滤（就像1一样），将上海的顾客的&lt;strong style=&quot;font-weight: bold;&quot;&gt; ID &lt;/strong&gt;选出来，这样得到的文件比1得到的文件更小（因为它只有一个 ID），很有可能可以被装入内存。用 Distributed Cache 将该 ID 文件分发到所有 Mapper 节点，Mapper 在处理 Customer 或 Order 的记录时就可以根据这个集合过滤所有非上海的顾客了。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;如果过滤得到的 ID 文件依然很大，这时判重利器 &lt;a href=&quot;http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/07/28/BloomFilter.html&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;BloomFilter&lt;/strong&gt;&lt;/a&gt; 就派上用场了。我们可以建立一个 BloomFilter 表示过滤后的顾客 ID 集合，它的尺寸要远小于原始集合。BloomFilter 存在的误判率也不是问题，它只会把不存在的元素误判为存在，Reducer 处也会进行过滤，可以把误判的元素剔除掉。&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;基于 Mapreduce 为超大集合建立 BloomFilter 的方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;每个 Mapper 对自己负责的 split 建立 BloomFilter，用一个 Reducer 接收它们并两两相“或”，即得到整体集合的 BloomFilter。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;这利用了 BloomFilter 的性质：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: #fff; white-space: pre-wrap; border-radius: 3px; display: block; background: #23241f; margin-top: 0px;&quot;&gt;filter1 | filter2 == 并集
filter1 &amp;amp; filter2 == 交集
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 style=&quot;font-size: 36px; margin: 0.67em 0; font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px;&quot;&gt;3. 参考&lt;/h1&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;a href=&quot;http://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;Mapreduce patterns&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://blog.cloudera.com/wp-content/uploads/2010/01/5-MapReduceAlgorithms.pdf&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;Mapreduce algorithms.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;《Hadoop in action》&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;《Hadoop 权威指南》&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>高性能网络通讯笔记</title>
      <link>http://novoland.github.io/%E7%BD%91%E7%BB%9C/2014/09/03/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%BB%9C%E9%80%9A%E8%AE%AF%E7%AC%94%E8%AE%B0.html</link>
      <pubDate>03 Sep 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E7%BD%91%E7%BB%9C/2014/09/03/高性能网络通讯笔记</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;前几天看了下阿里巴巴 RPC 框架 Dubbo 作者的内部分享，这里记下笔记。&lt;/p&gt;
&lt;h1 style=&quot;font-size: 36px; margin: 0.67em 0; font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px;&quot;&gt;传统rpc的问题&lt;/h1&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;java序列化，性能低&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;每连接每线程，BIO有性能问题&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;jdk代理性能低&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 style=&quot;font-size: 36px; margin: 0.67em 0; font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px;&quot;&gt;数据协议&lt;/h1&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;应用层协议&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;header字段：&lt;ul style=&quot;margin-top: 0px; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;magic high&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;magic low  --- 端口复用，多协议支持；兼容其他协议。&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;序列化方式&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;event&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;是否双向&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;请求还是响应&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;status&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;id  -- futureMap保存所有发送的请求，响应中携带请求id，实现一一对应&lt;ul style=&quot;margin-top: 0px; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;使用int id替换long，实现id轮转+超时（？？）&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;剩下来的位数可以用来扩展，存储服务器状态&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;使用future机制把客户端的同步调用转成异步的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;data length&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;序列化协议&lt;ul style=&quot;margin-top: 0px; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;web应用cpu负载低，网络负载高。数据包大小比压缩时间更重要。网络传输的时间远远大于cpu压缩时间，过于追求低压缩时间没有意义。&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;发送前压缩数据包。&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;另一个考虑的因素：工具使用的方便程度、适用场景是否广泛。protobuf用起来麻烦、hession/fastjson有些情况会序列化失败、java serialize最安全和普适。如果这里不是一个明显的瓶颈，可以直接使用java内置的序列化方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;序列化策略&lt;ul style=&quot;margin-top: 0px; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;chunk stream&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;一个连接上承载多个请求发送。如果一个请求过大发送时间过长会造成其他请求不能及时得到处理，容易出现超时。--- 将这些大的数据包拆分成多片，穿插发送。server端自己拼装。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 style=&quot;font-size: 36px; margin: 0.67em 0; font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px;&quot;&gt;IO模型&lt;/h1&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;Unix的5种IO模型&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;IO的两个阶段&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;是否阻塞 -- 异步、同步&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Blocking IO、Non-Blocking IO（non-blocking的意义：当需要睡眠当前线程时才能完成请求时，不睡眠，只做部分操作并返回；从内核拷贝数据到用户空间时依然会阻塞）、IO multiplexing（事件驱动，一般和non blocking IO搭配使用）、Signal-Driven IO&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Asynchronous IO&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;NIO的优势&lt;ul style=&quot;margin-top: 0px; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;避免多线程&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;基于block的传输比基于流的传输更高效&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;基于mmap的zero-copy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;TCP的调优&lt;ul style=&quot;margin-top: 0px; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;正确设置socket缓冲区，接收/发送缓冲区大小应该至少 = Bandwidth Delay Product = 带宽 * 往返时间，这样才能把两端之间的通信链路填满数据，充分利用带宽。&lt;ol style=&quot;margin-top: 0px; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;减少进程读写缓冲区的系统调用；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;充分利用带宽&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;关闭nagle算法，RPC 调用不允许延迟&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;在应用层做心跳检测，关闭tcp的keep-alive（这是全局设置）&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;网卡中断负载均衡&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 style=&quot;font-size: 36px; margin: 0.67em 0; font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px;&quot;&gt;线程模型&lt;/h1&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;MainReactor &lt;em style=&quot;margin-top: 0px;&quot;&gt; 1负责接受连接 + SubReactor &lt;/em&gt; N (thread pool，“IO线程”, 负责监听读写事件. 一个线程负责多个连接)的方式，和Netty一样。&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;业务处理时也引入线程池&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;codec（数据收集/拼装）/serialize（序列化/反序列化）在什么线程里做&lt;/p&gt;
&lt;ul style=&quot;margin-top: 0; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;Netty中codec直接在IO线程中做，dubbo也一样；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;Serialize/deserialize 分开了，在业务线程（池）中做；&lt;br style=&quot;margin-top: 0px;&quot;/&gt;原因原文没说，猜测：&lt;/p&gt;
&lt;ul style=&quot;margin-top: 0; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;serialize是比较耗时的，所有耗时的操作都应该放在业务线程中做，IO线程必须快速返回以便处理下一个连接，否则容易造成后续连接过很久才能得到处理，易超时；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;codec为什么不放在业务线程中做？一是职责分离，业务线程的输入是有意义的完整数据包；二是在数据包不完整时，业务线程基本上会快速退出继续阻塞，这会导致业务线程池的不稳定和频繁的线程切换。&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;任务的合理切分。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;在NIO的客户端，接受数据的事件将会写得很轻量级，但是接受到数据然后分析数据还原成业务对象，之后则会通过线程池的方式来分别处理。就好比监听连接到来，和实际的去建立连接分成了两个阶段的任务，让事件型的任务单纯，快速执行，让与业务相关的部分通过多线程并行的方式提高处理效率。总的来说就是把任务划分成为 &lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;系统性的任务&lt;/strong&gt; 和 &lt;strong style=&quot;font-weight: bold;&quot;&gt;业务性的任务&lt;/strong&gt;，前者消耗时间少，设计尽量简单高效，采用单线程处理即可，后者通常情况下在处理流程和资源上不冲突的情况可以通过多线程并行提高效率。（后者IO bound时多线程可以提高效率[依赖]，CPU bound时均分计算资源，要慢一起慢，不会出现一个任务耗时导致别的任务超时，此时处理总时间由于线程切换的开销反而会更大）&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;--- 放翁 《优化杂谈》&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;多线程的目的: 1. 阻塞时可以利用CPU;  2. 均分计算资源, 让多个任务都得以推进&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;业务线程池应该多大？&lt;br style=&quot;margin-top: 0px;&quot;/&gt;这一部分来自淘宝的《前台系统性能调优》&lt;/p&gt;
&lt;ul style=&quot;margin-top: 0; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;根据业务的CPU/IO类型不同，充分利用IO阻塞与CPU执行的overlapping（交错执行）&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;公式 --- 从CPU角度：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 23.158em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 19.289em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(0.896em 1000.003em 3.753em -0.473em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;t&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;h&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;r&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;s&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;padding-left: 0.301em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 10.003em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.61em 1000.003em 2.92em -0.473em); top: -3.271em; left: 50%; margin-left: -4.938em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;C&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;P&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;U&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.063em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;时&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;间&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif; padding-left: 0.241em;&quot;&gt;I&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.063em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;b&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;l&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;o&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;c&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;时&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;间&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.61em 1000.003em 2.92em -0.473em); top: -1.783em; left: 50%; margin-left: -1.842em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;C&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;P&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;U&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.063em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;时&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;间&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.307em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 10.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;∗&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif; padding-left: 0.241em;&quot;&gt;C&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;P&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;U&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.063em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;核&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 3.146em; vertical-align: -1.282em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul style=&quot;margin-top: 0; margin-bottom: 0; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;鸵鸟策略：设置多线程数，保证能充分利用CPU；线程切换开销假装没有，的确是瓶颈时再调。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Skyline监控系统工作原理分析</title>
      <link>http://novoland.github.io/%E5%B7%A5%E4%BD%9C/2014/09/03/Skyline%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90.html</link>
      <pubDate>03 Sep 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E5%B7%A5%E4%BD%9C/2014/09/03/Skyline监控系统工作原理分析</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;概述&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Skyline是一个实时的异常监测系统，它被动地接收metrics数据，并使用一系列算法自动地判断metrics是否异常，此外，用户可以很容易地根据自己应用数据的特点，提供自己的异常检测算法。Skyline还提供了一个web Ui接口，异常的metrics会在webapp中得到展示。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Skyline内部由3个组件组成：Horizon/Analyzer/Webapp：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1409638905577.png&quot; name=&quot;d7f1c2c1-b7c6-49c8-bca0-0bc1499c7f0b&quot; src=&quot;/assets/img/7ef2b048d05333ff5ca6e5cf5be92dc9.png&quot; style=&quot;border: 0; margin-top: 0px; max-width: 100%;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;它们的工作方式如下：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Horizon负责接收外部发送过来的datapoint并转发到Redis，同时从Redis中删除过时的datapoint（所谓datapoint是指某个metric在一个特定时间点的数据，它包含timestamp和value）。Analyzer从Redis获取metrics数据，并使用算法判断是否异常。最后Webapp以图表的方式向用户展示异常的metrics。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Horizon和Analyzer的工作流程如下图所示，红色字体标注的是settings.py中定义的配置项：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1409638939192.png&quot; name=&quot;b55f09cd-526f-45c2-8ffd-497ff6cfa837&quot; src=&quot;/assets/img/d3f0fc8692ffd01d09d7f7b12d6f4b90.png&quot; style=&quot;border: 0; margin-top: 0px; max-width: 100%;&quot;/&gt;&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;Horizon&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Horizon是Skyline的数据收集器，它由3个角色组成：Listener/Worker/Roomba。Horizon通过bin/horizon.d启停。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1409638965027.png&quot; name=&quot;270f4d0c-9f18-4e2d-8b41-51164796a5a1&quot; src=&quot;/assets/img/8e250921c3dbeee4f233ca21e6991fdc.png&quot; style=&quot;border: 0; margin-top: 0px; max-width: 100%;&quot;/&gt;&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;Listener&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Listener负责接收外部发送过来的数据，每个Listener是一个进程，目前会启动两种类型的Listener：TCP和UDP，它们使用的应用层协议不同，且数据的序列化方式也不同。应用向horizon发送metric数据时是以tuple为单位的，一个tuple的格式如下所示，表示某个metric在某个时刻的值：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;tuple&lt;/span&gt; == (metric_name, datapoint) == (metric_name, [timestamp,value])
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 25px; margin-bottom: 15px; font-size: 18px;&quot;&gt;TCP pickle&lt;/h4&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;TCP类型的Listener使用的序列化方式是cPickle，应用层协议如下：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;+----------------------------+-------------------------------------------------------------------------------+
| length(&lt;span style=&quot;color: #ae81ff; margin-top: 0px;&quot;&gt;4&lt;/span&gt; bytes)            | [ [tuple1,tuple2...(&lt;span style=&quot;color: #F92672;&quot;&gt;of&lt;/span&gt; metric &lt;span style=&quot;color: #e6db74;&quot;&gt;'A'&lt;/span&gt;)], [tuple1,tuple2...(&lt;span style=&quot;color: #F92672;&quot;&gt;of&lt;/span&gt; metric &lt;span style=&quot;color: #e6db74;&quot;&gt;'B'&lt;/span&gt;)], ...]  |
+----------------------------+-------------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;前4个字节是length，表示后续数据的长度。接下来是一个使用cPickle序列化的数组，tuple根据metric name分组，每组是该数组内的一个元素。&lt;/p&gt;
&lt;h4 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 25px; margin-bottom: 15px; font-size: 18px;&quot;&gt;UDP messagepack&lt;/h4&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;UDP类型的Listener使用的序列化方式是msgpack，应用层协议为：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #e6db74; margin-top: 0px;&quot;&gt;+---------+&lt;/span&gt;
|  tuple  |
&lt;span style=&quot;color: #e6db74;&quot;&gt;+---------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;是的，很简单，把tuple用msgpack序列化后发送即可。因为UDP可以保持消息边界的特性，因此不需要length字段。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Listener接收datapoint后将其缓存在内部的Chunk队列中，其长度由CHUNK_SIZE决定；Chunk满后被放入一个公共的队列Queue中，该队列的长度为MAX_QUEUE_SIZE。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;Worker&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Worker负责处理公共队列Queue中的Chunk，Horizon在启动时会创建WORKER_PROCESSES个worker进程，不停地从Queue中出队Chunk，将Chunk内的datapoint经msgpack序列化后，按其所属的metric添加到对应的Redis队列中。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Skyline在Redis中定义了两个namespace：FULL_NAMESPACE和MINI_NAMESPACE，MINI的作用稍微次要一点，我们先忽略它，后面提及Roomba时再讲解。两个namespace下的结构都是一致的：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;FULL_NAMESPACE + ${metric name} ==&amp;gt; List [ datapoint1,datapoint2,datapoint3 ... ] (&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;timeseries&lt;/strong&gt;)&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt; 每个metric都有一个List保存着它所对应的datapoint集合，这个List在Skyline中又被称为timeseries，它保存着该metric在一段时间内的取值序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;FULL_NAMESPACE + ‘unique_metrics’  ==&amp;gt; Set [metric name 1,  metric name 2, ... ]&lt;br style=&quot;margin-top: 0px;&quot;/&gt;该Set保存着所有metric的名字以便快速查找。&lt;br/&gt;Worker根据Chunk内tuple所携带的metric name信息，将datapoint发送到Redis的两个namespace中以供Analyzer模块分析。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;Roomba&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Roomba负责清除Redis各timeseries中过时的datapoint，只留下最近某段时间内的datapoint，保证Redis不爆掉。Horizon启动时会启动Roomba线程（Roomba和Worker不太一样，它是继承Thread的，虽然它的实际工作都是靠创建的进程完成的），对FULL和MINI两个namespace分别创建ROOMBA_PROCESSES个进程，从FULL/MINI_NAMESPACE + ‘unique_metrics’ 中找到所有的metrics并均匀地分配给每个进程处理。后者对每个分配的timeseries，删除距当前FULL/MINI_DURATION + ROOMBA_GRACE_TIME秒前的datapoint；如果整个timeseries都过时了，则该metric的List会从Redis中删除，同时metric name也会从set中删除。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;所有进程都退出后，Roomba线程继续循环，即将进行下一轮进程的创建。为了防止Redis中数据很少时，进程快速的创建和退出带来的性能消耗，每个进程在退出时都会判断运行的时间，如果小于30s，则休眠10s。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;因此，Roomba的工作其实就是保证Redis两个namespace下各个timeseries始终是“最近的”一段数据，其时间跨度由FULL_DURATION/MINI_DURATION（以及ROOMBA_GRACE_TIME）指定。FULL命名空间下的timeseries是Analyzer分析的对象，MINI下的并不会被分析，它的作用只在于在web UI中为用户提供某个metric最近一个小时间段（MINI_DURATION）内的概览。此外，MINI namespace还用于和Oculus配合工作，Oculus是Esty公司出品的另一个系统，我们这里忽略掉。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;Analyzer&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1409639087710.png&quot; name=&quot;fb060ac0-5f65-42dc-8899-2d05bb7bdedf&quot; src=&quot;/assets/img/d0530f215b0ef90ab0087ffd5f72931f.png&quot; style=&quot;border: 0; margin-top: 0px; max-width: 100%;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;经过Horizon的处理，Redis中已经保存了若干timeseries，Analyzer负责对其进行分析，同时提供了一系列算法判断timeseries是否异常的（anomalous）。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;Analyzer&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Analyzer也是一个线程，它的工作方式和Roomba几乎一致，启动后创建ANALYZER_PROCESSES个进程，平均分配FULL_NAMESPACE下的所有timeseries，每个timeseries被送入Algorithms模块处理，判断是否异常并返回异常的datapoint、报告异常的算法。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;所有进程分析完毕后，Analyzer将异常metrics的相关信息dump到webapp的anomalies.json文件中，随后webapp将会通过JSONP请求该文件，得到异常信息并展示。此外，Analyzer还将根据配置的Email信息发送预警邮件。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;最后，Analyzer线程判断整个分析过程耗时，如果&amp;lt;5s，则休眠10s，醒后重新进入下一轮进程创建。这里和Roomba有点差别，Roomba的休眠由各个进程判断，而这里是由Analyzer线程进行。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;Algorithms&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;这里是判断异常的核心所在，Skyline内置了9个算法来判断一个datapoint序列是否异常，用户可以根据自己应用的特征配置要使用的算法（ALGORITHMS配置项），或者自定义自己的判定算法。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;run_selected_algorithm(timeseries)方法中，timeseries首先会经过一系列合法性验证：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;datapoint数目太少（&amp;lt; MIN_TOLERABLE_LENGTH）：TooShort异常&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;过时（最后一个datapoint在 STALE_PERIOD 秒前）：Stable异常&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;时间跨度太短（两端datapoint时间之差 &amp;lt; FULL_DURATION）：Incomplete异常&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;重复数据太多（最后MAX_TOLERABLE_BOREDOM个datapoint都是一个值）：Boring异常&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;验证后将timeseries送入所选算法中进行异常判断。每个算法都会返回Boolean值，true表示异常，false表示正常。当有&amp;gt;CONSENSUS个算法判断为异常时，该timeseries才会被认为是anomalous的。最终返回3个值：是否异常 | 判定为异常的算法集合 | 异常datapoint，异常datapoint目前统一为序列最后3个datapoint的平均值，这和判断异常的算法是相关的，关于Skyline内置的9个算法的分析参见这里。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;Webapp&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Webapp基于Flask框架提供异常metrics的图表展现，是一个比较简单的模块，就不展开了。基本原理是向后台轮询anomalies.json，得到异常的metrics名称及对应的异常datapoint，之后根据metrics name向后台请求Redis中的timeseries序列（包括FULL/MINI namespace），并用图表展示出来。借用官网的一张图：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1409639146495.png&quot; name=&quot;ab5b5a19-7738-4d52-b489-7b27c5bdea45&quot; src=&quot;/assets/img/f45b6095218bcc1ffd34bc662c7d0404.png&quot; style=&quot;border: 0; margin-top: 0px; max-width: 100%;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;需要一提的是，图中所示1 hour和24 hour下的图表，分别是从MINI和FULL NAMESPACE中取得的timeseries数据，它们的时间跨度分别由参数MINI_DURATION和FULL_DURATION决定，并非固定的1小时或24小时，只不过页面上是这么写死的。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;问题&lt;/h2&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;Roomba对同一timeseries两次trim的时间间隔在10s以上，Analyzer是5s以上，如果FULL_DURATION过短（比如几秒），则两次analysis之间的Roomba过程可能将第一次分析后加入的新datapoint删除，当两次analysis的间隔 &amp;gt; FULL_DURATION时就有可能会发生这种情况。因此使用Skyline时不能将分析的单位时间跨度FULL_DURATION设置的过短；同时选择的算法不宜过多太复杂，否则一次analysis的耗时比FULLL_DURATION还高，就有可能出现上述问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;现在大部分的异常判定算法都是取timeseries的最后3个datapoint和整体序列进行比较，如果某些metrics的发送频率较快，在两次analysis的间隔（不考虑算法的运行时间的话5s-15s）内发送了多于3个的datapoint，这样，在第二次analysis时，就会忽略掉N-3个数据，假如异常刚好发生在倒数第4个datapoint处，则检测不到。因此metrics发送的频率（resolution）也不宜过高。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;我在Skyline的group里向作者提到了这两个疑问，&lt;a href=&quot;https://www.evernote.com/OutboundRedirect.action?dest=https%3A%2F%2Fgroups.google.com%2Fforum%2F%23%21topic%2Fskyline-dev%2FZMvrdh6UX4M&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;作者的回答&lt;/a&gt;是：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;第一种情况不太可能出现，因为实际中Analyzer的耗时大概在一两分钟，远低于通常设置的FULL_DURATION；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;的确会有这样的情况，Analyzer需要重写以便分析这段时间内所有加入的datapoint，而不仅仅是最后3个。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;总结&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;本文大致分析了Skyline的各个角色和工作原理，总的来说，Skyline是一个简单精巧的监控工具，但从代码来看有些地方的处理方式不太一致，在调试的过程中发现了一个比较明显的bug（不过作者的反应很快），给人的感觉不太严谨；其他的问题还有待于实际应用中发现。最后，Skyline的规模对Python的初学者是个很好的源码阅读教材～&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Skyline timeseries异常判定算法</title>
      <link>http://novoland.github.io/%E5%B7%A5%E4%BD%9C/2014/09/03/Skyline%20timeseries%E5%BC%82%E5%B8%B8%E5%88%A4%E5%AE%9A%E7%AE%97%E6%B3%95.html</link>
      <pubDate>03 Sep 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E5%B7%A5%E4%BD%9C/2014/09/03/Skyline timeseries异常判定算法</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Skyline内部提供了9个预定义的算法，这些算法要解决这样一个问题：&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;input：一个timeseries&lt;br style=&quot;margin-top: 0px;&quot;/&gt;output：是否异常&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;3-sigma&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一个很直接的异常判定思路是，拿最新3个datapoint的平均值（tail_avg方法）和整个序列比较，看是否偏离总体平均水平太多。怎样算“太多”呢，因为standard deviation表示集合中元素到mean的平均偏移距离，因此最简单就是和它进行比较。这里涉及到3-sigma理论：&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;In statistics, the 68–95–99.7 rule, also known as the three-sigma rule or empirical rule, states that nearly all values lie within 3 standard deviations of the mean in a normal distribution.&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;About 68.27% of the values lie within 1 standard deviation of the mean. Similarly, about 95.45% of the values lie within 2 standard deviations of the mean. Nearly all (99.73%) of the values lie within 3 standard deviations of the mean.&lt;/p&gt;
&lt;/blockquote&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1409640582929.png&quot; name=&quot;3ce62d68-9a4d-4626-9c82-0d6345a5fd46&quot; src=&quot;/assets/img/14112089f9338deb39688c3e27bfddc1.png&quot; style=&quot;border: 0; margin-top: 0px; max-width: 100%;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;简单来说就是：在normal distribution（正态分布）中，99.73%的数据都在偏离mean 3个σ (standard deviation 标准差) 的范围内。如果某些datapoint到mean的距离超过这个范围，则认为是异常的。Skyline初始内置的7个算法几乎都是基于该理论的：&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;stddev_from_average&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;stddev_from_average&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    A timeseries is anomalous if the absolute value of the average of the latest
    three datapoint minus the moving average is greater than one standard
    deviation of the average. This does not exponentially weight the MA and so
    is better for detecting anomalies with respect to the entire series.
    &quot;&quot;&quot;&lt;/span&gt;
    series = pandas.Series([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries])
    mean = series.mean()
    stdDev = series.std()
    t = tail_avg(timeseries)

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; abs(t - mean) &amp;gt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt; * stdDev
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该算法如下：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;求timeseries的mean&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;求timeseries的standard deviation&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;求tail_avg到mean的距离，大于3倍的标准差则异常。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该算法的特点是可以有效屏蔽 “在一个点上突变到很大的异常值但在下一个点回落到正常水平” 的情况，即屏蔽单点毛刺：因为它使用的是末3个点的均值（有效缓和突变），和整个序列比较（均值可能被异常值拉大），导致判断正常。对于需要忽略 “毛刺” 数据的场景而言，该算法比后续的EWMA/mean_subtraction_cumulation等算法更适用（当然也可以改造这些算法，用tail_avg代替last datapoint）。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;first_hour_average&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;first_hour_average&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    Calcuate the simple average over one hour, FULL_DURATION seconds ago.
    A timeseries is anomalous if the average of the last three datapoints
    are outside of three standard deviations of this value.
    &quot;&quot;&quot;&lt;/span&gt;
    last_hour_threshold = time() - (FULL_DURATION - &lt;span style=&quot;color: #ae81ff;&quot;&gt;3600&lt;/span&gt;)
    series = pandas.Series([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;] &amp;lt; last_hour_threshold])
    mean = (series).mean()
    stdDev = (series).std()
    t = tail_avg(timeseries)

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; abs(t - mean) &amp;gt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt; * stdDev
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;和上述算法几乎一致，但是不同的是，比对的对象是 最近FULL_DURATION时间段内开始的1小时内 的数据，求出这段datapoint的mean和standard deviation后再用tail_avg进行比较。当FULL_DURATION小于1小时(86400)时，该算法和上一个算法一致。对于那些在一段较长时间内匀速递增/减的metrics，该算法可能会误报。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;stddev_from_moving_average&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;stddev_from_moving_average&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    A timeseries is anomalous if the absolute value of the average of the latest
    three datapoint minus the moving average is greater than one standard
    deviation of the moving average. This is better for finding anomalies with
    respect to the short term trends.
    &quot;&quot;&quot;&lt;/span&gt;
    series = pandas.Series([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries])
    expAverage = pandas.stats.moments.ewma(series, com=&lt;span style=&quot;color: #ae81ff;&quot;&gt;50&lt;/span&gt;)
    stdDev = pandas.stats.moments.ewmstd(series, com=&lt;span style=&quot;color: #ae81ff;&quot;&gt;50&lt;/span&gt;)

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; abs(series.iget(-&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;) - expAverage.iget(-&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;)) &amp;gt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt; * stdDev.iget(-&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该算法先求出最后一个datapoint处的EWMA（Exponentially-weighted moving average）mean/std deviation，然后用最后 3 个datapoint的平均值与之比对，看是否满足3-sigma理论。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;关于 Moving Average&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;给定一个timeseries和subset长度（比如N天），则datapoint i 的N天 moving average = i之前N天（包括i）的平均值。不停地移动这个长度为N的“窗口”并计算平均值，就得到了一条moving average曲线。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Moving average常用来消除数据短期内的噪音，显示长期趋势；或者根据已有数据预测未来数据。&lt;/p&gt;
&lt;h4 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 25px; margin-bottom: 15px; font-size: 18px;&quot;&gt;Simple Moving Average&lt;/h4&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;这是最简单的moving average，为“窗口”内datapoints的算数平均值（每个datapoint的weight一样）：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;SMA(i) = [p(i) + p(i-1) + ... + p(i-n+1) ]/ n&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;当计算i+1处的SMA时，一个新的值加入，“窗口”左端的值丢弃，因此可得到递推式：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;SMA(i) = SMA(i-1) + p(i)/n – p(i-n+1)/n&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;实现起来也很容易，只要记录上次SMA和将要丢弃的datapoint即可(最开始的几个是没有SMA的)。Pandas中可用 pandas.stats.moments.rolling_mean 计算SMA。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;SMA由于过去的数据和现在的数据权重是一样的，因此它相对真实数据的走向存在延迟，不太适合预测，更适合观察长期趋势。&lt;/p&gt;
&lt;h4 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 25px; margin-bottom: 15px; font-size: 18px;&quot;&gt;Exponential moving average&lt;/h4&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;也称 Exponential-weighted moving average，它和SMA主要有两处不同：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;计算SMA仅“窗口”内的n个datapoint参与计算，而EWMA则是之前所有point；&lt;br style=&quot;margin-top: 0px;&quot;/&gt;EWMA计算average时每个datapoint的权重是不一样的，最近的datapoint拥有越高的权重，随时间呈指数递减。&lt;br/&gt;EWMA的递推公式是：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;EWMA(&lt;span style=&quot;color: #ae81ff; margin-top: 0px;&quot;&gt;1&lt;/span&gt;) = p(&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;)  &lt;span style=&quot;color: #75715e;&quot;&gt;// 有时也会取前若干值的平均值。α越小时EWMA(1)的取值越重要。&lt;/span&gt;
EWMA(i) = α * p(i) + (&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;-α) * EWMA(i – &lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;) &lt;span style=&quot;color: #75715e;&quot;&gt;// α是一个0-1间的小数，称为smoothing factor.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;可以看到比SMA更容易实现，只要维护上次EWMA即可。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;EWMA 的本质其实是，越老的数据在预测时占的比例越低。扩展以上公式可以看到，从i往前的datapoint，权重依次为α, α(1-α), α(1-α)^2….., α(1-α)^n，呈指数递减，权重的和的极限等于1。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;smoothing factor决定了EWMA的 &lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;时效性&lt;/strong&gt; 和 &lt;strong style=&quot;font-weight: bold;&quot;&gt;稳定性&lt;/strong&gt;。α越大时效性越好，越能反映出最近数据状态；α越小越平滑，越能吸收瞬时波动，反映出长期趋势。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;EWMA由于其时效性被广泛应用在“根据已有时间序列预测未来数据”的场景中，（在计算机领域）比较典型的应用是在TCP中估计RTT，即从已有的RTT数据计算未来RTT，以确定超时时间。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;虽然EWMA中参与计算的是全部datapoint，但它也有类似SMA “N天EWMA”的概念，此时α由N决定：α = 2/(N+1)，关于这个公式的由来参见&lt;a href=&quot;http://www.mcoscillator.com/learning_center/kb/market_data/exponential_versus_simple_moving_averages/&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;回到Skyline，这里并不是用EWMA来预测未来datapoint，而是类似之前的算法求出整体序列的mean和stdDev，只不过计算时加入了时间的权重（EWMA），越近的数据对结果影响越大，即判断的参照物是最近某段时间而非全序列; 再用last datapoint与之比较。因此它的优势在于:&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;可以检测到一个异常较短时间后发生的另一个(不太高的突变型)异常，其他算法很有可能会忽略，因为第一个异常把整体的平均水平和标准差都拉高了&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;比其他算法更快对异常作出反应，因为它更多的是参考突变之前的点（低水平），而非总体水平（有可能被某个异常或者出现较多次的较高的统计数据拉高）&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;而劣势则是&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;对渐进型而非突发型的异常检测能力较弱&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;异常持续一段时间后可能被判定为正常&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;mean_subtraction_cumulation&lt;/h3&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;mean_subtraction_cumulation&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    A timeseries is anomalous if the value of the next datapoint in the
    series is farther than a standard deviation out in cumulative terms
    after subtracting the mean from each data point.
    &quot;&quot;&quot;&lt;/span&gt;

    series = pandas.Series([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries])
    series = series - series[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;:len(series) - &lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;].mean()
    stdDev = series[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;:len(series) - &lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;].std()
    expAverage = pandas.stats.moments.ewma(series, com=&lt;span style=&quot;color: #ae81ff;&quot;&gt;15&lt;/span&gt;)

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; abs(series.iget(-&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;)) &amp;gt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt; * stdDev
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;算法如下：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;排除全序列（暂称为all）最后一个值（last datapoint），求剩余序列（暂称为rest，0..length-2）的mean；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;rest序列中每个元素减去rest的mean，再求standard deviation；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;求last datapoint到rest mean的距离，即 abs(last datapoint – rest mean)；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;判断上述距离是否超过rest序列std. dev.的3倍。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;简单地说，就是用最后一个datapoint和剩余序列比较，比较的过程依然遵循3-sigma。这个算法有2个地方很可疑：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;求剩余序列的std. dev.时先减去mean再求，这一步是多余的，对结果没影响；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;虽然用tail_avg已经很不科学了，这个算法更进一步，只判断最后一个datapoint是否异常，这要求在两次analysis间隔中最多只有一个datapoint被加入，否则就会丢失数据。关于这个问题的讨论，见&lt;a href=&quot;http://jiroujuan.wordpress.com/2013/10/08/skyline%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;这篇文章&lt;/a&gt;最末。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;和stddev_from_average相比，该算法对于 “毛刺” 判断为异常的概率远大于后者。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;least_squares&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;least_squares&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    A timeseries is anomalous if the average of the last three datapoints
    on a projected least squares model is greater than three sigma.
    &quot;&quot;&quot;&lt;/span&gt;

    x = np.array([t[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; t &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries])
    y = np.array([t[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; t &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries])
    A = np.vstack([x, np.ones(len(x))]).T
    results = np.linalg.lstsq(A, y)
    residual = results[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;]
    m, c = np.linalg.lstsq(A, y)[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;]
    errors = []
    &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; i, value &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; enumerate(y):
        projected = m * x[i] + c
        error = value - projected
        errors.append(error)

    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; len(errors) &amp;lt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt;:
        &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;False&lt;/span&gt;

    std_dev = scipy.std(errors)
    t = (errors[-&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] + errors[-&lt;span style=&quot;color: #ae81ff;&quot;&gt;2&lt;/span&gt;] + errors[-&lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt;]) / &lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt;

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; abs(t) &amp;gt; std_dev * &lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;and&lt;/span&gt; round(std_dev) != &lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;and&lt;/span&gt; round(t) != &lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;用最小二乘法得到一条拟合现有datapoint value的直线；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;用实际value和拟合value的差值组成一个新的序列error；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;求该序列的stdDev，判断序列error的tail_avg是否&amp;gt;3倍的stdDev&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;因为最小二乘法的关系，该算法对直线形的metrics比较适用。该算法也有一个问题，在最后判定的时候，不是用tail_avg到error序列的mean的距离，而是直接使用tail_avg的值，这无形中缩小了异常判定范围，也不符合3-sigma。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;小结&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;可以看到上述算法都是类似的思路：用最近的若干datapoint做样本，和一个总体序列进行比对，不同的只是比对的对象：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;stddev_from_average&lt;/strong&gt;&lt;br/&gt; tail_avg  ———  整个序列&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;first_hour_average&lt;/strong&gt;&lt;br/&gt; tail_avg  ———-  FULL_DURATION开始的一个小时&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;stddev_from_moving_average&lt;/strong&gt;&lt;br/&gt; last datapoint ———–  整个序列的EW mean和EW std dev&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;mean_subtraction_cumulation&lt;/strong&gt;&lt;br/&gt; last datapoint ———  剩余序列&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;least_squares&lt;/strong&gt;&lt;br/&gt; last datapoint ——– 真实数据和拟合直线间的差值序列&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;grubbs&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;grubbs&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    A timeseries is anomalous if the Z score is greater than the Grubb's score.
    &quot;&quot;&quot;&lt;/span&gt;

    series = scipy.array([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries])
    stdDev = scipy.std(series)
    mean = np.mean(series)
    tail_average = tail_avg(timeseries)
    z_score = (tail_average - mean) / stdDev
    len_series = len(series)
    threshold = scipy.stats.t.isf(&lt;span style=&quot;color: #ae81ff;&quot;&gt;.05&lt;/span&gt; / (&lt;span style=&quot;color: #ae81ff;&quot;&gt;2&lt;/span&gt; * len_series) , len_series - &lt;span style=&quot;color: #ae81ff;&quot;&gt;2&lt;/span&gt;)
    threshold_squared = threshold * threshold
    grubbs_score = ((len_series - &lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;) / np.sqrt(len_series)) * np.sqrt(threshold_squared / (len_series - &lt;span style=&quot;color: #ae81ff;&quot;&gt;2&lt;/span&gt; + threshold_squared))

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; z_score &amp;gt; grubbs_score
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Grubbs测试是一种从样本中找出outlier的方法，所谓outlier，是指样本中偏离平均值过远的数据，他们有可能是极端情况下的正常数据，也有可能是测量过程中的错误数据。使用Grubbs测试需要总体是正态分布的。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Grubbs测试步骤如下：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;样本从小到大排序；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;求样本的mean和std.dev.；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;计算min/max与mean的差距，更大的那个为可疑值；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;求可疑值的z-score (standard score)，如果大于Grubbs临界值，那么就是outlier；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;Grubbs临界值可以查表得到，它由两个值决定：检出水平α（越严格越小），样本数量n&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;排除outlier，对剩余序列循环做 1-5 步骤。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;由于这里需要的是异常判定，只需要判断tail_avg是否outlier即可。代码中还有求Grubbs临界值的过程，看不懂。&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;Z-score (standard score)&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;标准分，一个个体到集合mean的偏离，以标准差为单位，表达个体距mean相对“平均偏离水平（std dev表达）”的偏离程度，常用来比对来自不同集合的数据。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;histogram_bins&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;histogram_bins&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    A timeseries is anomalous if the average of the last three datapoints falls
    into a histogram bin with less than 20 other datapoints (you'll need to tweak
    that number depending on your data)

    Returns: the size of the bin which contains the tail_avg. Smaller bin size
    means more anomalous.
    &quot;&quot;&quot;&lt;/span&gt;

    series = scipy.array([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries])
    t = tail_avg(timeseries)
    h = np.histogram(series, bins=&lt;span style=&quot;color: #ae81ff;&quot;&gt;15&lt;/span&gt;)
    bins = h[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;]
    &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; index, bin_size &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; enumerate(h[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;]):
        &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; bin_size &amp;lt;= &lt;span style=&quot;color: #ae81ff;&quot;&gt;20&lt;/span&gt;:
            &lt;span style=&quot;color: #75715e;&quot;&gt;# Is it in the first bin?&lt;/span&gt;
            &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; index == &lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;:
                &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; t &amp;lt;= bins[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;]:
                    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;True&lt;/span&gt;
            &lt;span style=&quot;color: #75715e;&quot;&gt;# Is it in the current bin?&lt;/span&gt;
            &lt;span style=&quot;color: #F92672;&quot;&gt;elif&lt;/span&gt; t &amp;gt;= bins[index] &lt;span style=&quot;color: #F92672;&quot;&gt;and&lt;/span&gt; t &amp;lt; bins[index + &lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;]:
                    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;True&lt;/span&gt;

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该算法和以上都不同，它首先将timeseries划分成15个宽度相等的直方，然后判断tail_avg所在直方内的元素是否&amp;lt;=20，如果是，则异常。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;直方的个数和元素个数判定需要根据自己的metrics调整，不然在数据量小的时候很容易就异常了。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;ks_test&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;ks_test&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    A timeseries is anomalous if 2 sample Kolmogorov-Smirnov test indicates
    that data distribution for last 10 minutes is different from last hour.
    It produces false positives on non-stationary series so Augmented
    Dickey-Fuller test applied to check for stationarity.
    &quot;&quot;&quot;&lt;/span&gt;

    hour_ago = time() - &lt;span style=&quot;color: #ae81ff;&quot;&gt;3600&lt;/span&gt;
    ten_minutes_ago = time() - &lt;span style=&quot;color: #ae81ff;&quot;&gt;600&lt;/span&gt;
    reference = scipy.array([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;] &amp;gt;= hour_ago &lt;span style=&quot;color: #F92672;&quot;&gt;and&lt;/span&gt; x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;] &amp;lt; ten_minutes_ago])
    probe = scipy.array([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;] &amp;gt;= ten_minutes_ago])

    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; reference.size &amp;lt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;20&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;or&lt;/span&gt; probe.size &amp;lt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;20&lt;/span&gt;:
        &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;False&lt;/span&gt;

    ks_d,ks_p_value = scipy.stats.ks_2samp(reference, probe)

    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; ks_p_value &amp;lt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;0.05&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;and&lt;/span&gt; ks_d &amp;gt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;0.5&lt;/span&gt;:
        adf = sm.tsa.stattools.adfuller(reference, &lt;span style=&quot;color: #ae81ff;&quot;&gt;10&lt;/span&gt;)
        &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;  adf[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &amp;lt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;0.05&lt;/span&gt;:
            &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;True&lt;/span&gt;

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;这个算法比较高深，它将timeseries分成两段：最近10min（probe），1 hour前 -&amp;gt; 10 min前这50分钟内（reference），两个样本通过Kolmogorov-Smirnov测试后判断差异是否较大。如果相差较大，则对refercence这段样本进行 Augmented Dickey-Fuller 检验（ADF检验），查看其平稳性，如果是平稳的，说明存在从平稳状态（50分钟）到另一个差异较大状态（10分钟）的突变，序列认为是异常的。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;关于这两个检验过于学术了，以上只是我粗浅的理解。&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;Kolmogorov-Smirnov test&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;KS-test有两个典型应用：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;判断某个样本是否满足某个已知的理论分布，如正态/指数/均匀/泊松分布；&lt;br style=&quot;margin-top: 0px;&quot;/&gt;判断两个样本背后的总体是否可能有相同的分布，or 两个样本间是否可能来自同一总体， or 两个样本是否有显著差异。&lt;br/&gt;检验返回两个值：D，p-value，不太明白他们的具体含义，Skyline里当 p-value &amp;lt; 0.05 &amp;amp;&amp;amp; D &amp;gt; 0.5 时，认为差异显著。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;Augmented Dickey-Fuller test (ADF test)&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;用于检测时间序列的平稳性，当返回的p-value小于给定的显著性水平时，序列认为是平稳的，Skyline取的临界值是0.05。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;median_absolute_deviation&lt;/h2&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #F92672; margin-top: 0px;&quot;&gt;&lt;span style=&quot;color: #66d9ef; margin-top: 0px;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;median_absolute_deviation&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(timeseries)&lt;/span&gt;:&lt;/span&gt;
    &lt;span style=&quot;color: #e6db74;&quot;&gt;&quot;&quot;&quot;
    A timeseries is anomalous if the deviation of its latest datapoint with
    respect to the median is X times larger than the median of deviations.
    &quot;&quot;&quot;&lt;/span&gt;

    series = pandas.Series([x[&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;] &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; x &lt;span style=&quot;color: #F92672;&quot;&gt;in&lt;/span&gt; timeseries])
    median = series.median()
    demedianed = np.abs(series - median)
    median_deviation = demedianed.median()

    &lt;span style=&quot;color: #75715e;&quot;&gt;# The test statistic is infinite when the median is zero,&lt;/span&gt;
    &lt;span style=&quot;color: #75715e;&quot;&gt;# so it becomes super sensitive. We play it safe and skip when this happens.&lt;/span&gt;
    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; median_deviation == &lt;span style=&quot;color: #ae81ff;&quot;&gt;0&lt;/span&gt;:
        &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;False&lt;/span&gt;

    test_statistic = demedianed.iget(-&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;) / median_deviation

    &lt;span style=&quot;color: #75715e;&quot;&gt;# Completely arbitary...triggers if the median deviation is&lt;/span&gt;
    &lt;span style=&quot;color: #75715e;&quot;&gt;# 6 times bigger than the median&lt;/span&gt;
    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt; test_statistic &amp;gt; &lt;span style=&quot;color: #ae81ff;&quot;&gt;6&lt;/span&gt;:
        &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该算法不是基于mean/ standard deviation的，而是基于median / median of deviations (MAD)。&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;Median&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;大部分情况下我们用mean来表达一个集合的平均水平（average），但是在某些情况下存在少数极大或极小的outlier，拉高或拉低了（skew）整体的mean，造成估计的不准确。此时可以用median（中位数）代替mean描述平均水平。Median的求法很简单，集合排序中间位置即是，如果集合总数为偶数，则取中间二者的平均值。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;Median of deviation（MAD）&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;同mean一样，对于median我们也需要类似standard deviation这样的指标来表达数据的&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;紧凑/分散程度&lt;/strong&gt;，即偏离average的平均距离，这就是MAD。MAD顾名思义，是deviation的median，而此时的deviation = abs( 个体 – median )，避免了少量outlier对结果的影响，更robust。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;现在算法很好理解了：求出序列的MAD，看最后datapoint与MAD的距离是否 &amp;gt; 6个MAD。同样的，这里用最后一个datapoint判定，依然存在之前提到的问题；其次，6 是个“magic number”，需要根据自己metrics数据特点调整。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该算法的优势在于对异常更加敏感：假设metric突然变很高并保持一段时间，基于标准差的算法可能在异常出现较短时间后即判断为正常，因为少量outlier对标准差的计算是有影响的；而计算MAD时，若异常datapoint较少会直接忽略，因此感知异常的时间会更长。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;但正如Median的局限性，该算法对于由多个cluster组成的数据集，即数据分布在几个差距较大的区间内，效果很差，很容易误判。比如下图：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1409641576810.png&quot; name=&quot;6cf349c1-221b-4238-90bc-3dcf26e03b6e&quot; src=&quot;/assets/img/5feab8dcfcc970bb9a568cccc928fe69.png&quot; style=&quot;border: 0; margin-top: 0px; max-width: 100%;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;该曲线在两个区间内来回震荡，此时median为58，如红线所示。MAD计算则为9，很明显均不能准确描述数据集，最后节点的deviation=55，此时误判了。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;参考资料&lt;/h2&gt;
&lt;ul style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;各种Wiki&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;各种API文档&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://chenlinux.com/2013/06/19/skyline-algorithms-intro/&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;前辈的总结：【Etsy 的 Kale 系统】skyline 的过滤算法&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://www.investopedia.com/university/movingaverage/movingaverages1.asp&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;Moving Averages: What Are They?&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://wenku.baidu.com/view/ccfa573a3968011ca30091d6.html&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;Kolmogorov-Smirnov检验&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://wenku.baidu.com/view/84695b4e852458fb770b56bb.html&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;Grubbs检验法&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/tianguokaka/article/details/7741812&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;Median absolute deviation&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;《Head first statistics》&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>排序总结</title>
      <link>http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/08/05/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93.html</link>
      <pubDate>05 Aug 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/08/05/排序总结</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;1. 概述&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;基于比较&lt;/strong&gt;&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;插入：直接插入 / 希尔&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;交换：冒泡 / 快排&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;选择：堆排序&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;归并&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2. 插入&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;直接插入&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;特点：&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;稳定，就地，平均&lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 3.466em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.6em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.193em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.031em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.33em -0.484em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.541em; left: 0.598em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: MathJax_Main, serif; margin-top: 0px;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.575em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，最好情况(初始有序)下 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 2.817em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.113em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.247em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;思想：数组被分成两个部分，一个有序一个无序，依次将无序中的元素插入有序部分。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;数据若基本有序，插入排序可以大大减少数据交换次数，提升效率。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;希尔排序&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;特点：&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;非稳定，就地，&lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 3.52em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.654em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.139em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.085em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.33em -0.484em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.541em; left: 0.598em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.575em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (1 &amp;lt; λ &amp;lt; 2)&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;思想：先将序列按增量划分为元素个数近似的若干组，使用直接插入排序法对每组进行排序，不断缩小增量并排序，直到增量为1。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;因为增量初始值不容易选择，所以该算法不常用。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;3.  交换&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;冒泡排序&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;特点：&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;稳定，就地，平均 &lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 3.466em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.6em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.193em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.031em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.33em -0.484em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.541em; left: 0.598em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: MathJax_Main, serif; margin-top: 0px;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.575em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，最好(初始有序) &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 2.817em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.113em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.247em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;思想：数组被分成两个部分，一个有序一个无序，不断将较大元素冒泡到无序子序列首。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;若某趟冒泡未发生交换，说明数组已经有序，可提前结束。&lt;/p&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;快速排序&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;特点：&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;不稳定，就地，平均 &lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 4.656em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 3.52em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.247em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;l&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;g&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，最差情况(每次 partition 后 pivot 在最前或最后) &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 3.466em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.6em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.193em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.031em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.33em -0.484em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.541em; left: 0.598em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: MathJax_Main, serif; margin-top: 0px;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.575em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;思想：每次选定一个 pivot 将数组分割成两个部分，对二者递归应用这个过程。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;3. 选择&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;堆排序&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;特点：&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;不稳定，就地，始终 &lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 4.656em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 3.52em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.247em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;l&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;g&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;思想： 数组分为已排序和未排序部分，不停地对未排序部分建堆并提取堆顶到已排序部分最末。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;4. 其他&lt;/h2&gt;
&lt;h3 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 24px;&quot;&gt;归并排序&lt;/h3&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;特点：&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;稳定，非就地，时间始终是 &lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 4.656em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 3.52em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.247em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;l&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;g&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，空间&lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 2.817em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.113em; height: 0px; font-size: 132%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.247em 1000.003em 2.6em -0.43em); top: -2.162em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: MathJax_Math, serif; font-style: italic; margin-top: 0px;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;思想：首先，将整个序列（共N个元素）看成N个有序子序列，然后依次合并相邻的两个子序列，这样一直下去，直至变成一个整体有序的序列。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;适用场景：外部排序&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;5. 总结&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;大部分简单排序(直接插入排序 / 冒泡排序)都是稳定排序；&lt;br style=&quot;margin-top: 0px;&quot;/&gt;大部分高级排序都是不稳定排序，除了 &lt;strong style=&quot;font-weight: bold;&quot;&gt;归并排序&lt;/strong&gt;。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>快速排序</title>
      <link>http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/08/05/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.html</link>
      <pubDate>05 Aug 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/08/05/快速排序</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;怎么写一个正确的快速排序？&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;sort()&lt;/code&gt;方法很简单：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap; background: transparent;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 8px; display: block; background: #23241f; margin: 0 4px;&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #F92672;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;sort&lt;/span&gt;(&lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt;[] num,&lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; start, &lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; end){
    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;(start &amp;gt;= end) &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt;;

    &lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; i = partition(num,start,end);
    sort(num,start, i - &lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;);
    sort(num,i+&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;,end);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;主要的难点在&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;partition()&lt;/code&gt;方法。假定选定第一个元素为 pivot，且一次 partition 后数组分为两部分，左侧&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;&amp;lt;=&lt;/code&gt;pivot，右侧&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;&amp;gt;=&lt;/code&gt;pivot。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;首先考虑一般情况。根据算法，我们需要两个指针 i/j 初始指向数组的两端，i 之前的元素 &amp;lt;= pivot，j 之后的元素 &amp;gt;= pivot。两个指针均向中间移动，直到找到第一个不符合条件的元素。二者均停止时，交换 i/j 指针指向的元素，并重复这个过程。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1407240921581.png&quot; name=&quot;875cdb5c-19e2-4277-a8a1-9a5a1329c143&quot; src=&quot;/assets/img/a704a724a9d9f3ac2923ade3934d0bbe.png&quot; style=&quot;border: 0; max-width: 100%; border-radius: 8px;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;很快可以写出算法的主要框架：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap; background: transparent;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 8px; display: block; background: #23241f; margin: 0 4px;&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(...){
    &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(a[i] &amp;lt;= pivot) i++;
    &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(a[j] &amp;gt;= pivot) j--;
    swap(a,i,j);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;循环写出来了，自然要考虑什么时候停下来。稍微推演可知，当 i/j 两个指针穷尽了各自的区间时应当停止循环，此时 i和j 是个 &lt;strong style=&quot;font-weight: bold;&quot;&gt;交错的状态&lt;/strong&gt;，i 指向 &amp;gt;= 区域的第一个元素，j 指向 &amp;lt;= 区域的最后一个元素，如下所示：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1407245030987.png&quot; name=&quot;f99cadc0-a6e4-42b0-8478-6b206ae293fb&quot; src=&quot;/assets/img/0568de1c5403812afa20616e65f4ca20.png&quot; style=&quot;border: 0; max-width: 100%; border-radius: 8px;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;这时不能再交换 i/j 上的元素，而应将 pivot 移动到 &lt;strong style=&quot;font-weight: bold;&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;j&lt;/code&gt;&lt;/strong&gt; 处，并 return 该位置；至此一次 partition 就完成了。把这些想法加上，代码如下：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap; background: transparent;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 8px; display: block; background: #23241f; margin: 0 4px;&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(i&amp;lt;j){
    &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(a[i] &amp;lt;= pivot) i++;   &lt;span style=&quot;color: #75715e;&quot;&gt;// 1&lt;/span&gt;
    &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(a[j] &amp;gt;= pivot) j--;    &lt;span style=&quot;color: #75715e;&quot;&gt;// 2&lt;/span&gt;
    &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;(i&amp;lt;j)
        swap(a,i,j);
}
swap(a,start,j);

&lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; j;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;上述 1/2 处的循环看起来很有数组越界的危险，而事实也是如此。用几个 edge case 考察下，假设所有元素都 &amp;lt;= pivot，很明显循环1会越界，因此这里需要加上对边界的判断；当数组除 pivot 之外的元素都 &amp;gt; pivot 时，循环2也是一样的情况。这两个越界问题都可以通过 &lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;i&amp;lt;=j&lt;/code&gt; 这个判断解决。注意要加上等号，否则 i/j 不会交错，逻辑错误。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;用 edge case 对其他逻辑测试下都没问题，因此加上数组越界的防范就够了；最后&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;partition()&lt;/code&gt;的完整代码如下：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap; background: transparent;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 8px; display: block; background: #23241f; margin: 0 4px;&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; partition(&lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt;[] a, &lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; start, &lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; end){
    &lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; i = start, j = end, pivot = a[start];

    &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(i &amp;lt; j){
        &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(i &amp;lt;= j &amp;amp;&amp;amp; a[i] &amp;lt;= pivot) i++;   &lt;span style=&quot;color: #75715e;&quot;&gt;// 加上越界判断&lt;/span&gt;
        &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(i &amp;lt;= j &amp;amp;&amp;amp; a[j] &amp;gt;= pivot) j--;   &lt;span style=&quot;color: #75715e;&quot;&gt;// 加上越界判断&lt;/span&gt;
        &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;(i &amp;lt; j){
            swap(a,i,j);
        }
    }
    swap(a,start,j);

    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; j;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;从这个过程总结一下平常写（算法）代码的思路：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;根据抽象流程定下算法框架；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;考虑循环（或递归）何时结束，结束时的处理方式；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;用 edge case 测试代码，修正如数组越界 / 空指针异常等错误。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;总体而言是个从抽象到细节的过程。&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>几个常见的概率问题</title>
      <link>http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/08/05/%E5%87%A0%E4%B8%AA%E5%B8%B8%E8%A7%81%E7%9A%84%E6%A6%82%E7%8E%87%E9%97%AE%E9%A2%98.html</link>
      <pubDate>05 Aug 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/08/05/几个常见的概率问题</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;今天研究了下几个简单的概率问题，在这里记录下。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;1. 洗牌&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;问题很简单，有 n 个元素，设计一个能保证随机性的洗牌算法。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;直觉想到的算法是：&lt;/p&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;用一个数组作为新牌堆，不停地从原数组剩下的元素中随机挑一个放入新牌堆，直到原牌堆耗尽。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;我们来验证一下它的随机性。考虑一个元素，洗牌后它在第一个位置（即第一次抽牌就选中它）的概率是:&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 1.301em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.977em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(0.652em 1000.003em 3.033em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.706em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.897em 1000.003em 2.654em -0.484em); top: -1.783em; left: 50%; margin-left: -0.268em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.706em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.861em; vertical-align: -0.996em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;在第二个位置的概率是：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 21.864em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 16.561em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(-1.188em 1000.003em 5.035em -0.322em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-right: 0.165em; padding-left: 0.165em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 16.182em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(2.871em 1000.003em 8.282em -0.484em); top: -6.112em; left: 0.003em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.814em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -4.922em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;P&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.111em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -4.435em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -1.999em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 6.117em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.871em 1000.003em 7.957em -0.43em); top: -5.787em; left: 1.788em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.76em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -5.084em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -3.082em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -0.647em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 5.793em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.574em 1000.003em 9.797em -0.43em); top: -6.924em; left: 3.574em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 12.611em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.68em 1000.003em 3.087em -0.43em); top: -5.084em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;P&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.111em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;第&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;一&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;次&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;没&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;抽&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;P&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.111em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;第&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;二&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;次&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;抽&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.139em 1000.003em 3.52em -0.376em); top: -3.082em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.706em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.897em 1000.003em 2.654em -0.484em); top: -1.783em; left: 50%; margin-left: -0.268em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.706em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.384em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.484em); top: -1.945em; left: 50%; margin-left: -1.134em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.384em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.492em 1000.003em 4.873em -0.376em); top: -1.999em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.706em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.897em 1000.003em 2.654em -0.484em); top: -1.783em; left: 50%; margin-left: -0.268em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.706em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 6.929em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 8.004em; vertical-align: -3.639em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;依次类推，可知该元素将被等概率地分配到任意位置，符合要求。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;按该思路实现洗牌算法时有两个问题。首先，新牌堆显然需要 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 2.817em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.113em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.43em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;O&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的空间；其次，元素从旧数组移入新牌堆后势必会留下空洞，在后续抽牌时要跳过这些空洞位置。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;但实际上，新牌堆和旧牌堆元素之和始终为 n，因此整个洗牌过程可以就地完成。&lt;strong style=&quot;font-weight: bold;&quot;&gt;我们可以从前向后遍历，对元素 i，前 i-1 个位置构成新牌堆，i 及其后续元素属于旧牌堆。从旧牌堆中随机抽一个元素，与 i 处元素交换，即完成了一次抽牌动作&lt;/strong&gt;：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;&lt;img alt=&quot;Alt text&quot; class=&quot;en-media&quot; longdesc=&quot;./1407165876987.png&quot; name=&quot;7181a84e-10b9-436c-a70f-45240438418a&quot; src=&quot;/assets/img/1a87c760b2ed0738a84555935ac5928d.png&quot; style=&quot;border: 0; max-width: 100%; border-radius: 8px;&quot;/&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;这个算法还有个名字，&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;Fisher–Yates shuffle&lt;/code&gt;。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;代码：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap; background: transparent;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 8px; display: block; background: #23241f; margin: 0 4px;&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;&lt;span style=&quot;color: #66d9ef;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #a6e22e;&quot;&gt;shuffle&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(array)&lt;/span&gt; &lt;/span&gt;{
  &lt;span style=&quot;color: #F92672;&quot;&gt;var&lt;/span&gt; m = &lt;span style=&quot;color: #F92672;&quot;&gt;array&lt;/span&gt;.length, i;

  &lt;span style=&quot;color: #75715e;&quot;&gt;// While there remain elements to shuffle…&lt;/span&gt;
  &lt;span style=&quot;color: #75715e;&quot;&gt;// 为了方便这里是从后往前遍历的&lt;/span&gt;
  &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt; (m) {

    &lt;span style=&quot;color: #75715e;&quot;&gt;// Pick a remaining element…&lt;/span&gt;
    i = Math.floor(Math.random() * m--);

    &lt;span style=&quot;color: #75715e;&quot;&gt;// And swap it with the current element.&lt;/span&gt;
    &lt;span style=&quot;color: #F92672;&quot;&gt;var&lt;/span&gt; t = &lt;span style=&quot;color: #F92672;&quot;&gt;array&lt;/span&gt;[m];
    &lt;span style=&quot;color: #F92672;&quot;&gt;array&lt;/span&gt;[m] = &lt;span style=&quot;color: #F92672;&quot;&gt;array&lt;/span&gt;[i];
    &lt;span style=&quot;color: #F92672;&quot;&gt;array&lt;/span&gt;[i] = t;
  }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2. 随机数生成器的转换&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;听名字有点绕，其实就是给你一个&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;Rand5()&lt;/code&gt;，表示随机生成 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 2.708em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.059em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.376em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.165em;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 之间的数字，让你实现一个&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;Rand3()&lt;/code&gt;。&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap; background: transparent;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 8px; display: block; background: #23241f; margin: 0 4px;&quot;&gt;&lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; Rand3()  
{  
    &lt;span style=&quot;color: #F92672;&quot;&gt;int&lt;/span&gt; x = &lt;span style=&quot;color: #ae81ff;&quot;&gt;5&lt;/span&gt;;  
    &lt;span style=&quot;color: #F92672;&quot;&gt;while&lt;/span&gt;(x &amp;gt;= &lt;span style=&quot;color: #ae81ff;&quot;&gt;3&lt;/span&gt;) 
        x = Rand5();  
    &lt;span style=&quot;color: #F92672;&quot;&gt;return&lt;/span&gt; x;  
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;逻辑很简单，用&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;Rand5()&lt;/code&gt;不停地产生随机数，直到某个数字落在了 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 2.708em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.059em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.376em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.165em;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 内。最终只会生成 0/1/2 三个数字，看起来似乎每个数字都是等概率的。下面来证明这个结论：&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;以输出0为例，看看概率是多少。第一次 Rand5 返回 0 的概率是1/5，如果返回3或4（2/5 的概率），则需要调用第二次，同样的，也是1/5的概率得到 0，2/5 的概率得到3或4导致循环继续执行下去，如此反复。因此输出 0 的概率为：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 26.951em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 20.403em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(-4.867em 1000.003em 8.715em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-right: 0.165em; padding-left: 0.165em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 20.024em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(6.496em 1000.003em 18.401em -0.538em); top: -12.551em; left: 0.003em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.49em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.897em 1000.003em 2.871em -0.538em); top: -7.952em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -6.437em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -3.785em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -0.755em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: 1.68em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 12.557em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(6.496em 1000.003em 18.293em -0.43em); top: -12.443em; left: 1.464em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.76em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -8.114em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -5.084em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -2.432em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: 0.598em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: 3.033em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 12.449em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(7.254em 1000.003em 20.836em -0.376em); top: -14.283em; left: 3.249em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 16.778em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(2.221em 1000.003em 4.981em -0.376em); top: -9.305em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span style=&quot;vertical-align: 0.003em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Size3, serif;&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span style=&quot;vertical-align: 0.003em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Size3, serif;&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;⋯&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;vertical-align: 0.003em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Size3, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;vertical-align: 0.003em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Size3, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 3.845em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 3.791em -0.376em); top: -5.084em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.221em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.43em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Size1, serif; vertical-align: 0.003em;&quot;&gt;∑&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.438em -0.43em); top: -2.757em; left: 1.031em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;∞&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.484em); top: -1.999em; left: 1.031em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding-left: 0.165em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.546em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(2.221em 1000.003em 4.981em -0.268em); top: -3.839em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;vertical-align: 0.003em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Size3, serif;&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;vertical-align: 0.003em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Size3, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 3.845em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -3.406em; left: 2.275em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.139em 1000.003em 4.061em -0.376em); top: -2.432em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.546em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 3.195em -0.376em); top: -1.783em; left: 50%; margin-left: -1.188em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.327em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.49em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.43em); top: -2.703em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.43em); top: -1.891em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.49em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.546em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.139em 1000.003em 3.52em -0.376em); top: 0.598em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.492em 1000.003em 4.873em -0.376em); top: 1.68em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.43em); top: -1.945em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 14.288em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 17.718em; vertical-align: -8.496em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;显然这种方法是正确的。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;换一下题目，给一个&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;Rand(3)&lt;/code&gt;，怎么生成一个&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;Rand(5)&lt;/code&gt;呢？由于 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 13.423em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 10.176em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.43em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;R&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;R&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 可以构造出&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;Rand(9)&lt;/code&gt;，对它再应用上述算法即可。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;解释下 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 13.423em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 10.176em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.43em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;R&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;R&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 为什么可以得到&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;Rand(9)&lt;/code&gt;。&lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 7.091em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 5.36em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.43em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;R&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 得到一个随机数集合&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;0,3,6&lt;/code&gt;，&lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 4.873em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 3.682em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.43em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;R&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 得到&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 0 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 8px; margin: 0 4px;&quot;&gt;0,1,2&lt;/code&gt;，二者相加的结果刚好均匀地分布在 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 2.708em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.059em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.376em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.165em;&quot;&gt;9&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 区间内。推广这个结论可得，&lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 15.371em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 11.637em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 3.087em -0.43em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;R&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;M&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.057em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;M&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.057em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;R&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;a&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;d&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;M&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.057em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.432em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 可以得到 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 4.223em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 3.195em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 3.087em -0.376em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;padding-left: 0.165em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.572em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -2.486em; left: 0.003em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;M&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.057em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.703em; left: 1.085em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.646em; vertical-align: -0.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 区间内的随机数生成器。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;3. 蓄水池抽样&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;蓄水池抽样是要解决这样一个问题：给定一个很大的集合，集合总数 n 不能确定，只能遍历一遍，要求从中随机选取 k 个元素。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;蓄水池算法的原理是：维护一个大小为 k 的蓄水池，用集合的前 k 个元素初始化之；对后续每个元素 i，都以 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 1.031em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.76em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.085em 1000.003em 2.708em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.49em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.43em); top: -2.649em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.484em); top: -1.837em; left: 50%; margin-left: -0.106em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.49em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.861em; vertical-align: -0.568em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的概率替换掉蓄水池中的某个元素。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;代码：&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap; background: transparent;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 8px; display: block; background: #23241f; margin: 0 4px;&quot;&gt;Init : a reservoir &lt;span&gt;with&lt;/span&gt; the size： k  
&lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt; i= k+&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt; to n  
   M=random(&lt;span style=&quot;color: #ae81ff;&quot;&gt;1&lt;/span&gt;, i);  
   &lt;span style=&quot;color: #F92672;&quot;&gt;if&lt;/span&gt;( M &amp;lt; k)  
        SWAP the Mth value &lt;span style=&quot;color: #F92672;&quot;&gt;and&lt;/span&gt; ith value  
end &lt;span style=&quot;color: #F92672;&quot;&gt;for&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;下面来证明一下该算法的正确性。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;对某个元素，第一次就选中它的概率是 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 1.085em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.814em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.139em 1000.003em 2.708em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.544em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.43em); top: -2.703em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 2.384em -0.484em); top: -1.891em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.544em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.789em; vertical-align: -0.568em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，第二次才选中它的概率是 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 10.825em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 8.174em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 3.195em -0.376em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.327em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.544em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.43em); top: -2.703em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 2.384em -0.484em); top: -1.891em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.544em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.327em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.464em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.43em); top: -2.703em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.484em); top: -1.891em; left: 50%; margin-left: -0.647em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 1.464em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.273em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;padding-left: 0.381em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.544em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.43em); top: -2.703em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 2.384em -0.484em); top: -1.891em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.544em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.861em; vertical-align: -0.568em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，第三次第四次也类似，这跟之前的洗牌场景很像。因此，最终该元素被选中的概率就等于 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 1.085em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.814em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.085em 1000.003em 2.708em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.544em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.43em); top: -2.649em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.734em 1000.003em 2.384em -0.484em); top: -1.891em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.544em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.789em; vertical-align: -0.568em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;当 n == k 时，每个元素出现在蓄水池的概率都是1，即 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 1.031em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.76em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.085em 1000.003em 2.762em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.49em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.43em); top: -2.649em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.43em); top: -1.837em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.49em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.861em; vertical-align: -0.639em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;当 n == k+1 时，第一次考察发生在元素 k+1 处，根据算法，它被放入蓄水池的概率为 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 2.221em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.68em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.085em 1000.003em 2.817em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.41em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.43em); top: -2.649em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.492em -0.43em); top: -1.891em; left: 50%; margin-left: -0.647em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 1.41em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.932em; vertical-align: -0.711em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;；对原蓄水池中的任一元素，该次考察后被换出去的概率等于：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 37.503em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 28.412em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(-1.296em 1000.003em 5.143em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-right: 0.165em; padding-left: 0.165em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 28.033em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(2.871em 1000.003em 8.552em -0.538em); top: -6.328em; left: 0.003em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 4.278em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.68em 1000.003em 3.087em -0.538em); top: -5.138em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;被&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;换&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;出&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;去&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -4.489em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -1.945em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 6.334em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.817em 1000.003em 8.011em -0.43em); top: -5.841em; left: 5.252em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.76em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -5.138em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -3.136em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -0.593em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 5.847em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.628em 1000.003em 10.068em -0.538em); top: -7.086em; left: 7.037em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 20.998em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.68em 1000.003em 3.087em -0.538em); top: -5.138em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;第&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;个&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;元&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;素&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;被&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;放&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;入&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;蓄&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;水&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;池&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;选&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;自&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;己&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;作&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;为&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;交&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;换&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;对&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;象&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.139em 1000.003em 3.574em -0.376em); top: -3.136em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.275em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -3.19em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.925em -0.43em); top: -1.945em; left: 50%; margin-left: -1.08em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.275em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -1.783em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.492em 1000.003em 4.927em -0.376em); top: -1.945em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.275em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.925em -0.43em); top: -1.945em; left: 50%; margin-left: -1.08em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.275em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 7.091em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 8.218em; vertical-align: -3.782em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt; 所以，元素依然在蓄水池内的概率为 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 17.86em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 13.531em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 3.304em -0.376em); top: -2.649em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;被&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;换&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;出&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;去&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.273em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.273em;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.327em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.41em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.438em -0.43em); top: -2.703em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.492em -0.43em); top: -1.891em; left: 50%; margin-left: -0.647em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 1.41em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.273em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;padding-left: 0.381em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.41em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.43em); top: -2.649em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.492em -0.43em); top: -1.891em; left: 50%; margin-left: -0.647em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 1.41em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.932em; vertical-align: -0.711em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;当 n == k+2 时，根据2，前 k+1 内的元素在第二次考察（即考察第 k+2 个元素）前在蓄水池内的概率为 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 2.221em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.68em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.085em 1000.003em 2.817em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.41em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.43em); top: -2.649em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.492em -0.43em); top: -1.891em; left: 50%; margin-left: -0.647em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 1.41em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.932em; vertical-align: -0.711em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt; 同样的，第 k+2 个元素被放入蓄水池的概率为 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 2.221em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.68em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.085em 1000.003em 2.817em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.41em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.572em 1000.003em 2.384em -0.43em); top: -2.649em; left: 50%; margin-left: -0.16em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.221em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.492em -0.43em); top: -1.891em; left: 50%; margin-left: -0.647em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:MathJax_Main, serif;&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.275em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 1.41em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.932em; vertical-align: -0.711em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;；&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt; 对前 k+1 的元素，在第二次考察后在蓄水池要求 1)之前就在蓄水池；2)这次没有被交换出去：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;div style=&quot;white-space: nowrap;&quot;&gt;&lt;span style=&quot;width: 35.933em; display: inline-block;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 27.221em; height: 0px; font-size: 132%;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(-3.298em 1000.003em 7.146em -0.376em); top: -2.162em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-right: 0.165em; padding-left: 0.165em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 26.843em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(4.873em 1000.003em 14.559em -0.538em); top: -10.333em; left: 0.003em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 5.035em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.68em 1000.003em 3.087em -0.538em); top: -7.14em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;蓄&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;水&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;池&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -7.086em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -5.03em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: -2.486em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(3.845em 1000.003em 4.169em -0.484em); top: 0.057em; right: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 10.338em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(4.873em 1000.003em 14.072em -0.43em); top: -9.9em; left: 6.009em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.76em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -7.14em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -5.733em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -3.677em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: -1.134em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.113em 1000.003em 2.762em -0.43em); top: 1.41em; left: 50%; margin-left: -0.376em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 9.905em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(5.63em 1000.003em 16.074em -0.538em); top: -11.09em; left: 7.795em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 19.05em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.68em 1000.003em 3.087em -0.538em); top: -7.14em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;之&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;前&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;池&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;未&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;被&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;换&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;出&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.68em 1000.003em 3.087em -0.538em); top: -5.733em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;之&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;前&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;池&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;放&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;入&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;池&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic; padding-left: 0.219em;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;被&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;选&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;font-family:STIXGeneral, 'Arial Unicode MS', serif, serif; font-size: 76%; font-style: normal; font-weight: normal;&quot;&gt;中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.139em 1000.003em 3.574em -0.376em); top: -3.677em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.275em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -3.19em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.925em -0.43em); top: -1.945em; left: 50%; margin-left: -1.08em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.275em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.275em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -3.19em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.925em -0.43em); top: -1.945em; left: 50%; margin-left: -1.08em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.275em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;×&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.598em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.843em 1000.003em 2.817em -0.376em); top: -3.352em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -1.783em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.598em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.139em 1000.003em 3.574em -0.376em); top: -1.134em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.275em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -3.19em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.925em -0.43em); top: -1.945em; left: 50%; margin-left: -1.08em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.275em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;padding-left: 0.219em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.275em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.925em -0.43em); top: -3.352em; left: 50%; margin-left: -1.08em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.925em -0.43em); top: -1.945em; left: 50%; margin-left: -1.08em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.275em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(2.492em 1000.003em 4.927em -0.376em); top: 0.057em; left: 0.003em;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;padding-left: 0.111em; padding-right: 0.111em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.275em; height: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.626em 1000.003em 2.654em -0.43em); top: -3.19em; left: 50%; margin-left: -0.214em;&quot;&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.492em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.788em 1000.003em 2.925em -0.43em); top: -1.945em; left: 50%; margin-left: -1.08em;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-family:MathJax_Math, serif; font-style: italic;&quot;&gt;k&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:MathJax_Main, serif; padding-left: 0.219em;&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.654em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.869em 1000.003em 1.247em -0.484em); top: -1.296em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 2.275em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.085em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 4.007em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 11.096em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.167em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 13.504em; vertical-align: -6.425em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt; 也符合条件。&lt;/p&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;推广上述过程即可得证。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;4. 参考&lt;/h2&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://bost.ocks.org/mike/shuffle/&quot; style=&quot;background: transparent;&quot; target=&quot;_blank&quot;&gt;Fisher–Yates Shuffle&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://www.gocalf.com/blog/build-rand3-from-rand5.html&quot; style=&quot;background: transparent;&quot; target=&quot;_blank&quot;&gt;利用等概率Rand5产生等概率Rand3&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;a href=&quot;http://blog.csdn.net/hackbuteer1/article/details/7971328&quot; style=&quot;background: transparent;&quot; target=&quot;_blank&quot;&gt;海量数据随机抽样问题（蓄水池问题）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>常见的HTTP状态码</title>
      <link>http://novoland.github.io/%E7%BD%91%E7%BB%9C/2014/07/31/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP%E7%8A%B6%E6%80%81%E7%A0%81.html</link>
      <pubDate>31 Jul 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E7%BD%91%E7%BB%9C/2014/07/31/常见的HTTP状态码</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;1XX 消息&lt;/h2&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2XX 成功&lt;/h2&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;3XX 重定向&lt;/h2&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;301：重定向，资源永久移动，客户端不应该再继续通过该 url 访问该资源&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;302：重定向，资源临时移动，以后可能仍然使用该 url&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;304：not modified，浏览器可以使用本地缓存&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;4XX 客户端错误&lt;/h2&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;400：bad request，客户发送的请求不能理解&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;403：forbidden，无权限，服务器拒绝提供服务&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;404：not found，没找到资源&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;5XX 服务器端错误&lt;/h2&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;500：internal server error，服务器内部错误&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;503：server unavaliable，服务暂不可用&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>BloomFilter</title>
      <link>http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/07/28/BloomFilter.html</link>
      <pubDate>28 Jul 2014</pubDate>
      <author>克鲁斯卡尔</author>
      <guid>http://novoland.github.io/%E7%AE%97%E6%B3%95/2014/07/28/BloomFilter</guid>
      <description>&lt;div style=&quot;line-height: 1.6; font-family: Helvetica Neue, Arial, Hiragino Sans GB, STHeiti, Microsoft YaHei, WenQuanYi Micro Hei, SimSun, Song, sans-serif;&quot;&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;1. 原理&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;BloomFilter 是一种基于 &lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;bit 数组 + 多重hash&lt;/strong&gt; 的数据结构，用于判断一个元素是否在一个集合中。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;BloomFilter 在内部维护一个长度为 m 的bit数组，并提供 k 个 hash 函数。当一个元素被加入集合时，用这些 hash 函数计算出 k 个数组位置并赋为 1。为了查询一个元素是否在集合中，同样地用 hash 函数计算出该元素在 bit 数组中的 k 个位置，如果全部为 1 就认为在集合中。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;当k很大时，设计k个独立的hash function是不现实并且困难的。对于一个输出范围很大的hash function（例如MD5产生的128 bits数），如果不同bit位的相关性很小，则可把此输出分割为k份。或者可将k个不同的初始值（例如0,1,2, … ,k-1）结合元素，feed给一个hash function从而产生k个不同的数。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;可以看到，BloomFilter 有两个缺点：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;不支持 remove 元素；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;对一个不在集合中的元素，有可能误判；而且误判率会随着元素的增多而升高。因此不适合要求精确的场合。&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;BloomFilter 最大的优点是它是基于 bit 数组的，不保存元素本身，因此非常节省空间；同等规模的集合，BloomFilter 占用的空间可能只有 HashSet 的 1/4 或更少。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;2. 误判率的计算&lt;/h2&gt;
&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 15px 0; font-size: 14px; border-left: 5px solid #ddd; background-color: rgba(102, 128, 153, 0.05);&quot;&gt;
&lt;p style=&quot;margin: 0 0 10px; margin-bottom: 0; line-height: 1.6; font-size: 14px; font-weight: 300; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt; m:    bit 数组长度&lt;br style=&quot;margin-top: 0px;&quot;/&gt;  n:    集合元素个数&lt;br/&gt;  k:    hash 函数个数&lt;br/&gt;  p:    误判概率&lt;/p&gt;
&lt;/blockquote&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;很显然，误判概率 p 是关于 m/n/k 的函数:&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 6.551em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 5.42em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.92em -0.592em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif; padding-left: 0.301em;&quot;&gt;f&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.122em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif; padding-left: 0.182em;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif; padding-left: 0.182em;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.218em; vertical-align: -0.282em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;假设一个 hash 函数计算得到的位置等概率地分布在 bit 数组范围内，那么对于一个 bit 位，一次 hash 后它为 0 的概率是：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 3.396em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 2.801em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.015em 1000.003em 3.455em -0.414em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.241em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.896em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.741em -0.414em); top: -3.211em; left: 50%; margin-left: -0.235em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -1.842em; left: 50%; margin-left: -0.354em;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.307em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.896em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.575em; vertical-align: -0.925em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一个元素被加入集合后，该 bit 依然为 0 的概率是:&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 4.765em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 3.932em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.015em 1000.003em 3.455em -0.473em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.241em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.896em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.741em -0.414em); top: -3.211em; left: 50%; margin-left: -0.235em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -1.842em; left: 50%; margin-left: -0.354em;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.307em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.896em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.777em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.92em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.676em; left: 0.36em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.575em; vertical-align: -0.925em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;n 个元素加入集合后，该 bit 为 0 的概率是：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 5.182em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 4.289em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.015em 1000.003em 3.455em -0.473em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.241em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.896em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.741em -0.414em); top: -3.211em; left: 50%; margin-left: -0.235em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -1.842em; left: 50%; margin-left: -0.354em;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.307em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.896em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.134em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.92em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.676em; left: 0.36em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:STIXGeneral-Italic, serif;&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.575em; vertical-align: -0.925em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;现在查询一个不在集合中的元素，当它所对应的 k 个位置都为 1 时会发生误判，这个概率 p 是：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 10.658em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 8.872em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.015em 1000.003em 3.455em -0.592em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.241em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.896em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.741em -0.414em); top: -3.211em; left: 50%; margin-left: -0.235em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -1.842em; left: 50%; margin-left: -0.354em;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.307em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.896em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.134em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.92em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.676em; left: 0.36em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:STIXGeneral-Italic, serif;&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.777em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.92em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.676em; left: 0.36em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.575em; vertical-align: -0.925em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;由于 &lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 4.408em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 3.634em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.313em 1000.003em 2.92em -0.473em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif; padding-left: 0.241em;&quot;&gt;x&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.134em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.92em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -4.402em; left: 0.36em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.479em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.443em -0.473em); top: -2.616em; left: 50%; margin-left: -0.176em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 50%; font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.848em 1000.003em 2.443em -0.533em); top: -2.021em; left: 50%; margin-left: -0.176em;&quot;&gt;&lt;span style=&quot;font-size: 50%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;x&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.188em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.479em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 3.991em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.646em; vertical-align: -0.282em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 当x逼近0时约等于 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 0.598em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.479em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.473em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.718em; vertical-align: -0.068em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，因此有：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 7.443em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 6.193em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.313em 1000.003em 2.92em -0.592em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.241em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.61em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.473em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;e&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -4.342em; left: 0.479em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.836em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.443em -0.533em); top: -2.616em; left: 50%; margin-left: -0.354em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 50%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 50%; font-family:STIXGeneral-Italic, serif;&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.848em 1000.003em 2.443em -0.533em); top: -2.021em; left: 50%; margin-left: -0.235em;&quot;&gt;&lt;span style=&quot;font-size: 50%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.188em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.836em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 3.991em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.777em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.92em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.676em; left: 0.36em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.646em; vertical-align: -0.282em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;对于该函数，省略&lt;a href=&quot;http://www.cnblogs.com/allensun/archive/2011/02/16/1956532.html&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;推导过程&lt;/a&gt;给出结论，如果给定 m 和 n，当 k 取以下值时，误判率 p 的值最小：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 14.824em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 12.324em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.253em 1000.003em 3.455em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;公&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif; padding-left: 0.301em;&quot;&gt;l&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Italic, serif;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;⋅&lt;/span&gt;&lt;span style=&quot;padding-left: 0.241em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.896em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -3.211em; left: 50%; margin-left: -0.354em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -1.842em; left: 50%; margin-left: -0.235em;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.307em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.896em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;0.7&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;⋅&lt;/span&gt;&lt;span style=&quot;padding-left: 0.241em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.896em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -3.211em; left: 50%; margin-left: -0.354em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -1.842em; left: 50%; margin-left: -0.235em;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.307em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.896em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.289em; vertical-align: -0.925em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;此时误判率 p 等于：&lt;/p&gt;
&lt;div style=&quot;margin: 20px 0; text-align: center;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;div style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 20.896em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 17.384em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.015em 1000.003em 3.455em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;公&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral, Arial Unicode MS, serif, serif; font-size: 83%; font-style: normal; font-weight: normal; margin-top: 0px;&quot;&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.67em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.92em -0.592em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;p&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.021em; left: 0.539em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:STIXGeneral-Italic, serif;&quot;&gt;i&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:STIXGeneral-Italic, serif;&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.241em;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;padding-left: 0.241em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.658em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.741em -0.414em); top: -3.211em; left: 50%; margin-left: -0.235em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.741em -0.533em); top: -1.842em; left: 50%; margin-left: -0.235em;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.307em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.658em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.777em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.92em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.676em; left: 0.36em;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;padding-left: 0.301em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 1.432em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.741em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -2.676em; left: 0.539em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 70.7%; font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;−&lt;/span&gt;&lt;span style=&quot;font-size: 70.7%; font-family:STIXGeneral-Italic, serif;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family:STIXGeneral-Regular, serif; padding-left: 0.301em;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;padding-left: 0.301em;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 3.753em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.67em 1000.003em 2.741em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Regular, serif; margin-top: 0px;&quot;&gt;0.6185&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; top: -4.402em; left: 2.801em;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;padding-left: 0.122em; padding-right: 0.122em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.658em; height: 0px; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.848em 1000.003em 2.443em -0.533em); top: -2.616em; left: 50%; margin-left: -0.235em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-size: 50%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(1.848em 1000.003em 2.443em -0.533em); top: -2.021em; left: 50%; margin-left: -0.176em;&quot;&gt;&lt;span style=&quot;font-size: 50%; font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;n&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.265em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;position: absolute; clip: rect(0.836em 1000.003em 1.253em -0.533em); top: -1.188em; left: 0.003em;&quot;&gt;&lt;span style=&quot;border-left-width: 0.658em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.25px; vertical-align: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 1.074em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 3.991em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 2.575em; vertical-align: -0.925em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;公式1 和 公式2 是实现一个 BloomFilter 需要的理论支撑。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;3. 实现&lt;/h2&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;一个 BloomFilter 需要用户提供两个参数：&lt;/p&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 0.658em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.539em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.718em; vertical-align: -0.068em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，预计集合规模；&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 0.658em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.539em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.92em -0.592em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.932em; vertical-align: -0.282em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，当元素个数达到 n 时，可以接受的误判率&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;bit 数组长度 &lt;span style=&quot;display: inline-block; margin: 0; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 0.955em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.777em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.967em 1000.003em 2.741em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.718em; vertical-align: -0.068em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 和 hash 函数个数 &lt;span style=&quot;display:inline-block;margin:0&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;white-space: nowrap; margin-top: 0px;&quot;&gt;&lt;span style=&quot;width: 0.598em; display: inline-block; margin-top: 0px;&quot;&gt;&lt;span style=&quot;display: inline-block; position: relative; width: 0.479em; height: 0px; font-size: 120%; margin-top: 0px;&quot;&gt;&lt;span style=&quot;position: absolute; clip: rect(1.729em 1000.003em 2.741em -0.533em); top: -2.557em; left: 0.003em; margin-top: 0px;&quot;&gt;&lt;span style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;font-family: STIXGeneral-Italic, serif; margin-top: 0px;&quot;&gt;k&lt;span style=&quot;display: inline-block; overflow: hidden; height: 1px; width: 0.003em; margin-top: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; width: 0px; height: 2.562em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-width: 0.004em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.004em; vertical-align: -0.068em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 在初始化时由上述两个公式计算而得。&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;在爬虫项目中用了 BloomFilter 作为 url 的判重器，代码在&lt;a href=&quot;http://gist.github.com/novoland/9277fe26b4ec91cb3ee6&quot; style=&quot;background: transparent; margin-top: 0px;&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;。其中 k 个 hash 函数是通过为 MD5 提供 k 个不同的 salt 构造的。实际使用中当集合规模为 500 万，误判率为万分之一时，所占空间仅为 11.5M。&lt;/p&gt;
&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; color: inherit; margin-top: 30px; margin-bottom: 20px; font-size: 30px;&quot;&gt;4. 其他技巧&lt;/h2&gt;
&lt;ol style=&quot;margin-top: 0; margin-bottom: 10px; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6; margin-top: 0px;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;两个 BloomFilter 的交集、并集&lt;/p&gt;
&lt;pre style=&quot;overflow: initial; font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 14px; display: block; padding: 0; margin: 0 0 10px; line-height: 1.6; word-break: break-all; word-wrap: break-word; color: #333333; background-color: #f5f5f5; border: none; border-radius: 0; white-space: pre-wrap;&quot; xml:space=&quot;preserve&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: inherit; padding: 1em; color: #f8f8f2; background-color: transparent; white-space: pre-wrap; border-radius: 0; display: block; background: #23241f; margin-top: 0px;&quot;&gt;filter1 | filter2 == 并集
filter1 &amp;amp; filter2 == 交集
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;font-weight: bold; margin-top: 0px;&quot;&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, Courier New, monospace; font-size: 90%; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: nowrap; border-radius: 4px; margin-top: 0px;&quot;&gt;counting BloomFilter&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;margin: 0 0 10px; line-height: 1.6; white-space: pre-wrap; word-wrap: break-word;&quot;&gt;传统 BloomFilter 只能添加元素，不能对元素计数，也无法删除元素。如果把底层数组的 bit 换成 int，就可以支持计数和删除动作。每次插入元素时，将对应的 k 个 int 加一；查询时，返回 k 个 int 的最小值；删除时，将对应的 k 个 int 减一。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>